{"ast":null,"code":"import { rootConstants } from '../_constants';\nconst initialState = {\n  lessonData: {\n    \"id\": []\n  },\n  lessonData1: {\n    \"id\": []\n  },\n  counter: 247,\n  GrapIsLog: false,\n  GrapRequestIsLog: false,\n  LessonIsLog: false,\n  SchoolIsLog: true,\n  LessonChooseRequest: false,\n  LessonChooseIsLog: false,\n  LessonChooseData: [],\n  graphLessonName: 'ss',\n  graphLessonData: [],\n  schoolName: 'MUIS',\n  buttonStateName: 'GRAPH',\n  allLessonData: [{\n    \"data1\": []\n  }, {\n    \"data2\": []\n  }, {\n    \"data3\": []\n  }, {\n    \"data4\": []\n  }, {\n    \"data5\": []\n  }],\n  lessonPlan: [{\n    \"autumn1\": []\n  }, {\n    \"spring1\": []\n  }, {\n    \"autumn2\": []\n  }, {\n    \"spring2\": []\n  }, {\n    \"autumn3\": []\n  }, {\n    \"spring3\": []\n  }, {\n    \"autumn4\": []\n  }, {\n    \"spring4\": []\n  }],\n  planRequest: false,\n  planIslog: false,\n  beforeNumber: null,\n  beforeNumberColor: null,\n  afterNumber: [],\n  example: []\n};\nexport default function lessonReducer(state = initialState, action) {\n  switch (action.type) {\n    case rootConstants.ROOT_REQUEST:\n      return { ...state,\n        counter: 1111\n      };\n\n    case rootConstants.ROOT_SUCCESS:\n      return { ...state,\n        counter: 111222\n      };\n\n    case rootConstants.MODAL_SCHOOL_TRUE:\n      return { ...state,\n        counter: 3333,\n        SchoolIsLog: true\n      };\n\n    case rootConstants.MODAL_SCHOOL_FALSE:\n      return { ...state,\n        counter: 3333,\n        SchoolIsLog: false,\n        LessonIsLog: true\n      };\n\n    case rootConstants.MODAL_LESSON_TRUE:\n      return { ...state,\n        counter: 3333,\n        LessonIsLog: true\n      };\n\n    case rootConstants.MODAL_LESSON_FALSE:\n      return { ...state,\n        counter: 3333,\n        LessonIsLog: false\n      };\n\n    case rootConstants.MODAL_GRAP_REQUEST:\n      return { ...state,\n        counter: 441111,\n        GrapRequestIsLog: true,\n        graphLessonName: action.data\n      };\n\n    case rootConstants.MODAL_GRAP_TRUE:\n      return { ...state,\n        counter: 441111,\n        GrapIsLog: true,\n        graphLessonData: action.data\n      };\n\n    case rootConstants.MODAL_GRAP_FALSE:\n      return { ...state,\n        counter: 444222,\n        GrapIsLog: false\n      };\n    // hicheel songolt huuhduud bagshid ogoh sanal\n\n    case rootConstants.LESSON_CHOOSE_REQUEST:\n      return { ...state,\n        counter: 441111,\n        LessonChooseRequest: true,\n        graphLessonName: action.name\n      };\n\n    case rootConstants.LESSON_CHOOSE_TRUE:\n      return { ...state,\n        counter: 441111,\n        LessonChooseIsLog: true,\n        LessonChooseData: action.data\n      };\n\n    case rootConstants.LESSON_CHOOSE_FALSE:\n      return { ...state,\n        counter: 444222,\n        LessonChooseIsLog: false\n      };\n\n    case rootConstants.SCHOOL_NAME:\n      return { ...state,\n        counter: 5555111,\n        schoolName: action.data\n      };\n\n    case rootConstants.LESSON_SET_DATA:\n      return { ...state,\n        counter: 99999999999999,\n        allLessonData: action.data\n      };\n\n    case rootConstants.LESSONS_DATA_PUSH:\n      return { ...state,\n        counter: 66661111,\n        lessonData1: initialState.lessonData[\"id\"].push(action.data.id)\n      };\n\n    case rootConstants.LESSONS_DATA_POP:\n      return { ...state,\n        counter: 666622222,\n        lessonData1: initialState.lessonData[\"id\"].splice(initialState.lessonData[\"id\"].indexOf(action.data.id), 1)\n      };\n\n    case rootConstants.BUTTON_STATE:\n      return { ...state,\n        counter: 999922222,\n        buttonStateName: action.data\n      };\n    // hicheel huviar gargah uyiin udirdlaga heseg \n\n    case rootConstants.LESSON_PLAN_REQUEST:\n      return { ...state,\n        counter: 441111,\n        planRequest: true\n      };\n\n    case rootConstants.LESSON_PLAN_TRUE:\n      return { ...state,\n        counter: 441111,\n        planIslog: true,\n        lessonPlan: action.data\n      };\n    // omnoh hesgig arilgah husnegtudin id hadgalah\n\n    case rootConstants.BEFORE_NUMBER_SET:\n      return { ...state,\n        counter: 441111,\n        beforeNumber: action.data,\n        beforeNumberColor: action.colors\n      };\n\n    case rootConstants.AFTER_NUMBER_SET:\n      return { ...state,\n        counter: 441111,\n        afterNumber: action.data\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/notepad/src/_reducers/lessonReducer.js"],"names":["rootConstants","initialState","lessonData","lessonData1","counter","GrapIsLog","GrapRequestIsLog","LessonIsLog","SchoolIsLog","LessonChooseRequest","LessonChooseIsLog","LessonChooseData","graphLessonName","graphLessonData","schoolName","buttonStateName","allLessonData","lessonPlan","planRequest","planIslog","beforeNumber","beforeNumberColor","afterNumber","example","lessonReducer","state","action","type","ROOT_REQUEST","ROOT_SUCCESS","MODAL_SCHOOL_TRUE","MODAL_SCHOOL_FALSE","MODAL_LESSON_TRUE","MODAL_LESSON_FALSE","MODAL_GRAP_REQUEST","data","MODAL_GRAP_TRUE","MODAL_GRAP_FALSE","LESSON_CHOOSE_REQUEST","name","LESSON_CHOOSE_TRUE","LESSON_CHOOSE_FALSE","SCHOOL_NAME","LESSON_SET_DATA","LESSONS_DATA_PUSH","push","id","LESSONS_DATA_POP","splice","indexOf","BUTTON_STATE","LESSON_PLAN_REQUEST","LESSON_PLAN_TRUE","BEFORE_NUMBER_SET","colors","AFTER_NUMBER_SET"],"mappings":"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","sourcesContent":["import {rootConstants} from '../_constants';\n\nconst initialState = {\n  lessonData: {\"id\":[]},\n  lessonData1: {\"id\":[]},\n  counter: 247,\n\n  GrapIsLog: false,\n  GrapRequestIsLog: false,\n  LessonIsLog: false,\n  SchoolIsLog: true,\n\n  LessonChooseRequest: false,\n  LessonChooseIsLog: false,\n  LessonChooseData: [],\n\n  graphLessonName: 'ss',\n  graphLessonData: [],\n  \n  schoolName: 'MUIS',\n  \n  buttonStateName: 'GRAPH',\n\n  allLessonData:[{\"data1\":[]},{\"data2\":[]},{\"data3\":[]},{\"data4\":[]},{\"data5\":[]}],\n  lessonPlan:[{\"autumn1\":[]},\n                {\"spring1\":[]},\n                {\"autumn2\":[]},\n                {\"spring2\":[]},\n                {\"autumn3\":[]},\n                {\"spring3\":[]},\n                {\"autumn4\":[]},\n                {\"spring4\":[]}],\n  planRequest: false,\n  planIslog: false,\n\n  beforeNumber: null,\n  beforeNumberColor: null,\n  afterNumber:[],\n\n  example:[]\n\n}\n\nexport default function lessonReducer(state = initialState, action) {\n  switch (action.type) {\n    case rootConstants.ROOT_REQUEST:\n        return { ...state, counter: 1111 };\n    case rootConstants.ROOT_SUCCESS:\n        return { ...state, counter: 111222};\n\n\n    case rootConstants.MODAL_SCHOOL_TRUE:\n        return { ...state, counter: 3333, SchoolIsLog: true };\n    case rootConstants.MODAL_SCHOOL_FALSE:\n        return { ...state, counter: 3333, SchoolIsLog: false, LessonIsLog:true };\n\n\n    case rootConstants.MODAL_LESSON_TRUE:\n        return { ...state, counter: 3333, LessonIsLog: true };\n    case rootConstants.MODAL_LESSON_FALSE:\n        return { ...state, counter: 3333, LessonIsLog: false };\n\n\n    case rootConstants.MODAL_GRAP_REQUEST:\n        return { ...state, counter: 441111, GrapRequestIsLog: true, graphLessonName: action.data };\n    case rootConstants.MODAL_GRAP_TRUE:\n        return { ...state, counter: 441111, GrapIsLog: true, graphLessonData: action.data };\n    case rootConstants.MODAL_GRAP_FALSE:\n        return { ...state, counter: 444222, GrapIsLog: false};\n\n// hicheel songolt huuhduud bagshid ogoh sanal\n    case rootConstants.LESSON_CHOOSE_REQUEST:\n        return { ...state, counter: 441111, LessonChooseRequest: true, graphLessonName: action.name };\n    case rootConstants.LESSON_CHOOSE_TRUE:\n        return { ...state, counter: 441111, LessonChooseIsLog: true, LessonChooseData: action.data };\n    case rootConstants.LESSON_CHOOSE_FALSE:\n        return { ...state, counter: 444222, LessonChooseIsLog: false};\n\n\n\n\n    case rootConstants.SCHOOL_NAME:\n        return { ...state, counter: 5555111, schoolName: action.data};\n\n\n    case rootConstants.LESSON_SET_DATA:\n        return { ...state, counter: 99999999999999, allLessonData: action.data};\n\n\n\n    case rootConstants.LESSONS_DATA_PUSH:\n        return { ...state, counter: 66661111, lessonData1: initialState.lessonData[\"id\"].push(action.data.id)};\n    case rootConstants.LESSONS_DATA_POP:\n        return { ...state, counter: 666622222, lessonData1: initialState.lessonData[\"id\"].splice(initialState.lessonData[\"id\"].indexOf(action.data.id), 1 )};\n    \n    case rootConstants.BUTTON_STATE:\n        return { ...state, counter: 999922222, buttonStateName: action.data};\n\n// hicheel huviar gargah uyiin udirdlaga heseg \n    case rootConstants.LESSON_PLAN_REQUEST:\n        return { ...state, counter: 441111, planRequest: true };\n    case rootConstants.LESSON_PLAN_TRUE:\n        return { ...state, counter: 441111, planIslog: true, lessonPlan: action.data };\n\n    \n// omnoh hesgig arilgah husnegtudin id hadgalah\n    case rootConstants.BEFORE_NUMBER_SET:\n        return { ...state, counter: 441111, beforeNumber: action.data , beforeNumberColor: action.colors};\n    case rootConstants.AFTER_NUMBER_SET:\n        return { ...state, counter: 441111, afterNumber: action.data };\n    \n        default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}