{"ast":null,"code":"var _jsxFileName = \"/home/tuguldur/MyDream/Diplom/notepad/src/_components/modalgraph.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { rootConstants } from '../_constants';\nimport DataPrint from './dataPrint';\nimport AmountChart from '../_components/amountChart';\nimport qs from 'qs';\nimport './componentcss.css';\nconst datasss = [{\n  \"date\": \"2018\"\n}, {\n  \"spring\": [{\n    \"label\": \"A\",\n    \"y\": 20\n  }, {\n    \"label\": \"B\",\n    \"y\": 8\n  }, {\n    \"label\": \"C\",\n    \"y\": 4\n  }, {\n    \"label\": \"D\",\n    \"y\": 5\n  }, {\n    \"label\": \"F\",\n    \"y\": 6\n  }, {\n    \"label\": \"W\",\n    \"y\": 2\n  }, {\n    \"label\": \"I\",\n    \"y\": 2\n  }]\n}, {\n  \"autumn\": [{\n    \"label\": \"A\",\n    'y': 1\n  }, {\n    \"label\": \"B\",\n    \"y\": 8\n  }, {\n    \"label\": \"C\",\n    \"y\": 2\n  }, {\n    \"label\": \"D\",\n    \"y\": 9\n  }, {\n    \"label\": \"F\",\n    'y': 3\n  }, {\n    \"label\": \"W\",\n    \"y\": 2\n  }]\n}];\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nclass ModalGraph extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n      test: 1,\n      lesdata: []\n    };\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      },\n      body: qs.stringify({\n        'lessonname': this.props.graphLessonName\n      })\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        lesdata: data\n      });\n    }).catch(error => {\n      alert('Requessst failed', error);\n    });\n  }\n\n  handleOpenModal() {\n    alert(JSON.stringify(this.props.graphLessonData));\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  render() {\n    const haha = this.props.graphLessonData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.props.modalTrue(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"open Modal\"), React.createElement(ReactModal, {\n      isOpen: this.props.islog,\n      onClick: () => this.garphstate(),\n      contentLabel: \"\\u0414\\u04AF\\u043D\\u0433\\u0438\\u0439\\u043D \\u0433\\u0440\\u0430\\u0444\\u0438\\u043A\",\n      className: \"Modal\",\n      style: customStyles,\n      lo: true,\n      overlayClassName: \"Overlay\",\n      onRequestClose: () => this.props.modalFalse(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"\\u30E2\\u30FC\\u30C0\\u30EB\", [this.props.counter], \" \"), React.createElement(AmountChart, {\n      className: \"amountChart\",\n      data: haha,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.props.modalFalse(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Close Modal\"), React.createElement(\"button\", {\n      onClick: () => this.handleOpenModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"dasdas\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    lessonData: state.lessonData,\n    counter: state.counter,\n    islog: state.islog,\n    Reqislog: state.Reqislog,\n    graphLessonName: state.graphLessonName,\n    graphLessonData: state.graphLessonData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    modalTrue: () => dispatch({\n      type: rootConstants.MODAL_TRUE\n    }),\n    modalFalse: () => dispatch({\n      type: rootConstants.MODAL_FALSE\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalGraph);","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/notepad/src/_components/modalgraph.js"],"names":["React","ReactDOM","ReactModal","connect","rootConstants","DataPrint","AmountChart","qs","datasss","customStyles","content","top","left","right","bottom","marginRight","transform","ModalGraph","Component","constructor","state","showModal","test","lesdata","handleOpenModal","bind","handleCloseModal","componentDidMount","fetch","method","headers","body","stringify","props","graphLessonName","then","res","json","data","setState","catch","error","alert","JSON","graphLessonData","render","haha","modalTrue","islog","garphstate","modalFalse","counter","mapStateToProps","lessonData","Reqislog","mapDispatchToProps","dispatch","type","MODAL_TRUE","MODAL_FALSE"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport {rootConstants} from '../_constants';\nimport DataPrint from './dataPrint';\nimport AmountChart from '../_components/amountChart';\nimport qs from 'qs';\n\nimport './componentcss.css';\nconst datasss =[\n  {\"date\": \"2018\"},\n  {\"spring\":[\n              { \"label\": \"A\", \"y\": 20 },\n              { \"label\": \"B\", \"y\": 8 },\n              { \"label\": \"C\", \"y\": 4 },\n              { \"label\": \"D\", \"y\": 5 },\n              { \"label\": \"F\", \"y\": 6 },\n              { \"label\": \"W\", \"y\": 2 },\n              { \"label\": \"I\", \"y\": 2 }\n           ]},\n  {\"autumn\":[\n              { \"label\": \"A\", 'y': 1 },\n              { \"label\": \"B\", \"y\": 8 },\n              { \"label\": \"C\", \"y\": 2 },\n              { \"label\": \"D\", \"y\": 9 },\n              { \"label\": \"F\", 'y': 3 },\n              { \"label\": \"W\", \"y\": 2 },\n  ]}\n\n]\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\nclass ModalGraph extends React.Component {\n    constructor () {\n      super();\n      this.state = {\n        showModal: false,\n        test: 1,\n        lesdata:[]\n\n      };\n      \n      this.handleOpenModal = this.handleOpenModal.bind(this);\n      this.handleCloseModal = this.handleCloseModal.bind(this);\n    }\n    \n    componentDidMount() {\n      \n        fetch('http://localhost:3001/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n          },\n          body: \tqs.stringify({'lessonname': this.props.graphLessonName})\n        })\n        .then((res) => res.json())\n        .then((data) => { \n          this.setState({lesdata:data})\n        })\n        .catch((error) => {\n          alert('Requessst failed', error);\n        });\n      \n    \n      \n    }\n    \n    handleOpenModal () {\n     alert(JSON.stringify(this.props.graphLessonData))\n    }\n    \n    handleCloseModal () {\n      this.setState({ showModal: false });\n    }\n  \n    render () {\n      const haha = this.props.graphLessonData\n      return (\n        <div>\n            <button onClick={ () => this.props.modalTrue()}>open Modal</button>\n\n          <ReactModal \n             isOpen={this.props.islog}\n             onClick={ () => this.garphstate()}\n             contentLabel=\"Дүнгийн график\"\n             className=\"Modal\"\n             style={customStyles}lo\n             overlayClassName=\"Overlay\"\n             onRequestClose={ () => this.props.modalFalse()}\n             >\n            <div >モーダル{[this.props.counter]} </div>\n            <AmountChart className=\"amountChart\" data = {haha}></AmountChart>\n            <button onClick={ () => this.props.modalFalse()}>Close Modal</button>\n            <button onClick={ () => this.handleOpenModal()}>dasdas</button>\n          </ReactModal>\n        </div>\n      );\n    }\n  }\n\n  function mapStateToProps(state) {\n    return {\n       lessonData: state.lessonData,\n       counter: state.counter,\n       islog: state.islog,\n       Reqislog: state.Reqislog,\n       graphLessonName: state.graphLessonName,\n       graphLessonData: state.graphLessonData\n\n\n    }\n }\n function mapDispatchToProps(dispatch) {\n    return {\n        modalTrue: () => dispatch({type: rootConstants.MODAL_TRUE }),\n        modalFalse: () => dispatch({type: rootConstants.MODAL_FALSE }),\n    }\n }\n  export default connect(mapStateToProps,mapDispatchToProps)(ModalGraph);\n"]},"metadata":{},"sourceType":"module"}