{"ast":null,"code":"var _jsxFileName = \"/home/tuguldur/MyDream/Diplom/notepad/src/_components/_lessonPlan/planPrint.js\";\nimport React from 'react';\nimport './panCss.css';\nimport { connect } from 'react-redux';\nimport { allActions } from '../../_actions';\nimport GridLayout from 'react-grid-layout';\n\nclass planPrint extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      colors: \"green\",\n      hover: false\n    };\n  }\n\n  render() {\n    // layout is an array of objects, see the demo for more complete usage\n    const layout = [{\n      i: 'a',\n      x: 0,\n      y: 0,\n      w: 1,\n      h: 2,\n      static: true\n    }, {\n      i: 'b',\n      x: 1,\n      y: 0,\n      w: 3,\n      h: 2,\n      minW: 2,\n      maxW: 4\n    }, {\n      i: 'c',\n      x: 4,\n      y: 0,\n      w: 1,\n      h: 2\n    }];\n    return React.createElement(GridLayout, {\n      className: \"layout\",\n      layout: layout,\n      cols: 12,\n      rowHeight: 30,\n      width: 1200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: \"red\"\n      },\n      key: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"a\"), React.createElement(\"div\", {\n      style: {\n        background: \"red\"\n      },\n      key: \"b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"b\"), React.createElement(\"div\", {\n      style: {\n        background: \"red\"\n      },\n      key: \"c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"c\"));\n  }\n\n}\n\nexport default connect(allActions.mapStateToProps, allActions.mapDispatchToProps)(planPrint);","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/notepad/src/_components/_lessonPlan/planPrint.js"],"names":["React","connect","allActions","GridLayout","planPrint","Component","constructor","state","colors","hover","render","layout","i","x","y","w","h","static","minW","maxW","background","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACrCC,EAAAA,WAAW,GAAG;AACX;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,MAAM,EAAE,OADE;AAEVC,MAAAA,KAAK,EAAE;AAFG,KAAb;AAIF;;AACDC,EAAAA,MAAM,GAAG;AACR;AACA,UAAMC,MAAM,GAAG,CACb;AAACC,MAAAA,CAAC,EAAE,GAAJ;AAASC,MAAAA,CAAC,EAAE,CAAZ;AAAeC,MAAAA,CAAC,EAAE,CAAlB;AAAqBC,MAAAA,CAAC,EAAE,CAAxB;AAA2BC,MAAAA,CAAC,EAAE,CAA9B;AAAiCC,MAAAA,MAAM,EAAE;AAAzC,KADa,EAEb;AAACL,MAAAA,CAAC,EAAE,GAAJ;AAASC,MAAAA,CAAC,EAAE,CAAZ;AAAeC,MAAAA,CAAC,EAAE,CAAlB;AAAqBC,MAAAA,CAAC,EAAE,CAAxB;AAA2BC,MAAAA,CAAC,EAAE,CAA9B;AAAiCE,MAAAA,IAAI,EAAE,CAAvC;AAA0CC,MAAAA,IAAI,EAAE;AAAhD,KAFa,EAGb;AAACP,MAAAA,CAAC,EAAE,GAAJ;AAASC,MAAAA,CAAC,EAAE,CAAZ;AAAeC,MAAAA,CAAC,EAAE,CAAlB;AAAqBC,MAAAA,CAAC,EAAE,CAAxB;AAA2BC,MAAAA,CAAC,EAAE;AAA9B,KAHa,CAAf;AAKA,WACE,oBAAC,UAAD;AAAa,MAAA,SAAS,EAAC,QAAvB;AAAgC,MAAA,MAAM,EAAEL,MAAxC;AAAgD,MAAA,IAAI,EAAE,EAAtD;AAA0D,MAAA,SAAS,EAAE,EAArE;AAAyE,MAAA,KAAK,EAAE,IAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAACS,QAAAA,UAAU,EAAC;AAAZ,OAAZ;AAAgC,MAAA,GAAG,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAK,MAAA,KAAK,EAAE;AAACA,QAAAA,UAAU,EAAC;AAAZ,OAAZ;AAAgC,MAAA,GAAG,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAK,MAAA,KAAK,EAAE;AAACA,QAAAA,UAAU,EAAC;AAAZ,OAAZ;AAAgC,MAAA,GAAG,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CADF;AAOD;;AAtBqC;;AA2BxC,eAAenB,OAAO,CAACC,UAAU,CAACmB,eAAZ,EAA4BnB,UAAU,CAACoB,kBAAvC,CAAP,CAAkElB,SAAlE,CAAf","sourcesContent":["import React from 'react';\nimport './panCss.css';\nimport {connect} from 'react-redux';\nimport {allActions} from '../../_actions'\nimport GridLayout from 'react-grid-layout';\n\nclass planPrint extends React.Component {\n   constructor() {\n      super();\n      this.state = {\n         colors: \"green\",\n         hover: false,\n      }\n   }\n   render() {\n    // layout is an array of objects, see the demo for more complete usage\n    const layout = [\n      {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\n      {i: 'b', x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4},\n      {i: 'c', x: 4, y: 0, w: 1, h: 2}\n    ];\n    return (\n      <GridLayout  className=\"layout\" layout={layout} cols={12} rowHeight={30} width={1200}>\n        <div style={{background:\"red\"}} key=\"a\">a</div>\n        <div style={{background:\"red\"}} key=\"b\">b</div>\n        <div style={{background:\"red\"}} key=\"c\">c</div>\n      </GridLayout>\n    )\n  }\n   \n}\n\n\nexport default connect(allActions.mapStateToProps,allActions.mapDispatchToProps)(planPrint);"]},"metadata":{},"sourceType":"module"}