{"ast":null,"code":"import _regeneratorRuntime from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/src/components/excelPage.js\";\nimport React, { Component } from \"react\";\nimport { Table, Button, Popconfirm, Row, Col, Upload } from \"antd\";\nimport { ExcelRenderer } from \"react-excel-renderer\";\n\nvar ExcelPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExcelPage, _Component);\n\n  function ExcelPage(props) {\n    var _this;\n\n    _classCallCheck(this, ExcelPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExcelPage).call(this, props));\n\n    _this.handleSave = function (row) {\n      var newData = _toConsumableArray(_this.state.rows);\n\n      var index = newData.findIndex(function (item) {\n        return row.key === item.key;\n      });\n      var item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, row));\n\n      _this.setState({\n        rows: newData\n      });\n    };\n\n    _this.fileHandler = function (fileList) {\n      console.log(\"fileList\", fileList);\n      var fileObj = fileList;\n\n      if (!fileObj) {\n        _this.setState({\n          errorMessage: \"No file uploaded!\"\n        });\n\n        return false;\n      }\n\n      console.log(\"fileObj.type:\", fileObj.type);\n\n      if (!(fileObj.type === \"application/vnd.ms-excel\" || fileObj.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\")) {\n        _this.setState({\n          errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\n        });\n\n        return false;\n      } //just pass the fileObj as parameter\n\n\n      ExcelRenderer(fileObj, function (err, resp) {\n        if (err) {\n          console.log(err);\n        } else {\n          var newRows = [];\n          resp.rows.slice(1).map(function (row, index) {\n            if (row && row !== \"undefined\") {\n              newRows.push({\n                key: index,\n                id: row[0],\n                level: row[1],\n                gender: row[2],\n                q1: row[3],\n                q2: row[4],\n                q3: row[5],\n                q4: row[6]\n              });\n            }\n          });\n\n          if (newRows.length === 0) {\n            _this.setState({\n              errorMessage: \"No data found in file!\"\n            });\n\n            return false;\n          } else {\n            _this.setState({\n              cols: resp.cols,\n              rows: newRows,\n              errorMessage: null\n            });\n          }\n        }\n      });\n      return false;\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"submitting: \", _this.state.rows); //submit to API\n              //if successful, banigate and clear the data\n              //this.setState({ rows: [] })\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleDelete = function (key) {\n      var rows = _toConsumableArray(_this.state.rows);\n\n      _this.setState({\n        rows: rows.filter(function (item) {\n          return item.key !== key;\n        })\n      });\n    };\n\n    _this.handleAdd = function () {\n      var _this$state = _this.state,\n          count = _this$state.count,\n          rows = _this$state.rows;\n      var newData = {\n        number: \"bambu\",\n        level: \"User's name\",\n        gender: \"22\",\n        question1: \"Female\",\n        question2: \"Female\",\n        question3: \"Female\",\n        question4: \"Female\",\n        yriltslga: \"Female\",\n        buleg: \"Female\"\n      };\n\n      _this.setState({\n        rows: [newData].concat(_toConsumableArray(rows)),\n        count: count + 1\n      });\n    };\n\n    _this.handleRequest = function () {\n      var rows = _this.state.rows;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      fetch('http://127.0.0.1:5000/prediction/', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(rows)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        alert(response);\n\n        _this.setState({\n          result: response.result,\n          isLoading: false\n        });\n      });\n    };\n\n    _this.state = {\n      cols: [],\n      rows: [],\n      errorMessage: null,\n      result: [],\n      isLoading: false,\n      columns: [{\n        title: \"Д/д\",\n        dataIndex: \"id\",\n        editable: true\n      }, {\n        title: \"Түвшин\",\n        dataIndex: \"level\",\n        editable: true\n      }, {\n        title: \"Хүйс\",\n        dataIndex: \"gender\",\n        editable: true\n      }, {\n        title: \"Онолын болон практик хичээлийн алийг нь судлахад тухайн сэдвээр ойлголт авахад илүү хялбар байдаг вэ?\",\n        dataIndex: \"q1\",\n        editable: true\n      }, {\n        title: \"Сурах үйл ажиллагаанд илүү их хүчин чармайлт гаргахад юу нөлөөлдөг вэ?\",\n        dataIndex: \"q2\",\n        editable: true\n      }, {\n        title: \"Хичээлийн үеэр ямар нөхцөлд буюу ямар үед хамгийн идэвхтэй суралцдаг вэ?\",\n        dataIndex: \"q3\",\n        editable: true\n      }, {\n        title: \"Долоо хоногт дунджаар хичээл хийхэд хэдэн цагийг зарцуулж байна? Үүнийг ихэсгэх / багасгах бодол байгаа юу?\",\n        dataIndex: \"q4\",\n        editable: true\n      }, {\n        title: \"Устгах\",\n        dataIndex: \"action\",\n        render: function render(text, record) {\n          return _this.state.rows.length >= 1 ? React.createElement(Popconfirm, {\n            title: \"Sure to delete?\",\n            onConfirm: function onConfirm() {\n              return _this.handleDelete(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"\\u0423\\u0441\\u0442\\u0433\\u0430\\u0445\")) : null;\n        }\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ExcelPage, [{\n    key: \"checkFile\",\n    value: function checkFile(file) {\n      var errorMessage = \"\";\n\n      if (!file || !file[0]) {\n        return;\n      }\n\n      var isExcel = file[0].type === \"application/vnd.ms-excel\" || file[0].type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n\n      if (!isExcel) {\n        errorMessage = \"You can only upload Excel file!\";\n      }\n\n      console.log(\"file\", file[0].type);\n      var isLt2M = file[0].size / 1024 / 1024 < 2;\n\n      if (!isLt2M) {\n        errorMessage = \"File must be smaller than 2MB!\";\n      }\n\n      console.log(\"errorMessage\", errorMessage);\n      return errorMessage;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = this.state.columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              editable: col.editable,\n              dataIndex: col.dataIndex,\n              title: col.title,\n              handleSave: _this2.handleSave\n            };\n          }\n        });\n      });\n      return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"my diplom \"), JSON.stringify(this.state.result), React.createElement(Row, {\n        gutter: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 8,\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: \"5%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Upload Farmer Data\"))), React.createElement(Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleRequest,\n        size: \"large\",\n        type: \"info\",\n        style: {\n          marginBottom: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"urgejluuleh\")), React.createElement(Col, {\n        span: 8,\n        align: \"right\",\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, this.state.rows.length > 0 && React.createElement(React.Fragment, null, React.createElement(Button, {\n        onClick: this.handleAdd,\n        size: \"large\",\n        type: \"info\",\n        style: {\n          marginBottom: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Add a row\"), \" \", React.createElement(Button, {\n        onClick: this.handleSubmit,\n        size: \"large\",\n        type: \"primary\",\n        style: {\n          marginBottom: 16,\n          marginLeft: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Submit Data\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        name: \"file\",\n        beforeUpload: this.fileHandler,\n        onRemove: function onRemove() {\n          return _this2.setState({\n            rows: []\n          });\n        },\n        multiple: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"\\u0422\\u0430 \\u0444\\u0430\\u0439\\u043B\\u0430\\u0430 \\u043E\\u0440\\u0443\\u0443\\u043B\\u043D\\u0430 \\u0443\\u0443\"))), React.createElement(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(Table, {\n        rowClassName: function rowClassName() {\n          return \"editable-row\";\n        },\n        dataSource: this.state.rows,\n        columns: columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ExcelPage;\n}(Component);\n\nexport { ExcelPage as default };","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/src/components/excelPage.js"],"names":["React","Component","Table","Button","Popconfirm","Row","Col","Upload","ExcelRenderer","ExcelPage","props","handleSave","row","newData","state","rows","index","findIndex","item","key","splice","setState","fileHandler","fileList","console","log","fileObj","errorMessage","type","err","resp","newRows","slice","map","push","id","level","gender","q1","q2","q3","q4","length","cols","handleSubmit","handleDelete","filter","handleAdd","count","number","question1","question2","question3","question4","yriltslga","buleg","handleRequest","isLoading","fetch","headers","method","body","JSON","stringify","then","response","json","alert","result","columns","title","dataIndex","editable","render","text","record","file","isExcel","isLt2M","size","col","onCell","display","justifyContent","alignItems","marginBottom","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button, Popconfirm, Row, Col, Upload } from \"antd\";\nimport { ExcelRenderer } from \"react-excel-renderer\";\n\nexport default class ExcelPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cols: [],\n      rows: [],\n      errorMessage: null,\n      result:[],\n      isLoading:false,\n      columns: [\n        {\n          title: \"Д/д\",\n          dataIndex: \"id\",\n          editable: true\n        },\n        {\n          title: \"Түвшин\",\n          dataIndex: \"level\",\n          editable: true\n        },\n        {\n          title: \"Хүйс\",\n          dataIndex: \"gender\",\n          editable: true\n        },\n        {\n          title: \"Онолын болон практик хичээлийн алийг нь судлахад тухайн сэдвээр ойлголт авахад илүү хялбар байдаг вэ?\",\n          dataIndex: \"q1\",\n          editable: true\n        },\n        {\n          title: \"Сурах үйл ажиллагаанд илүү их хүчин чармайлт гаргахад юу нөлөөлдөг вэ?\",\n          dataIndex: \"q2\",\n          editable: true\n        },\n        {\n          title: \"Хичээлийн үеэр ямар нөхцөлд буюу ямар үед хамгийн идэвхтэй суралцдаг вэ?\",\n          dataIndex: \"q3\",\n          editable: true\n        },\n        {\n          title: \"Долоо хоногт дунджаар хичээл хийхэд хэдэн цагийг зарцуулж байна? Үүнийг ихэсгэх / багасгах бодол байгаа юу?\",\n          dataIndex: \"q4\",\n          editable: true\n        },\n        {\n          title: \"Устгах\",\n          dataIndex: \"action\",\n          render: (text, record) =>\n            this.state.rows.length >= 1 ? (\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => this.handleDelete(record.key)}\n              >\n                <p>Устгах</p>\n              </Popconfirm>\n            ) : null\n        }\n      ]\n    };\n  }\n\n  handleSave = row => {\n    const newData = [...this.state.rows];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row\n    });\n    this.setState({ rows: newData });\n  };\n\n  checkFile(file) {\n    let errorMessage = \"\";\n    if (!file || !file[0]) {\n      return;\n    }\n    const isExcel =\n      file[0].type === \"application/vnd.ms-excel\" ||\n      file[0].type ===\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    if (!isExcel) {\n      errorMessage = \"You can only upload Excel file!\";\n    }\n    console.log(\"file\", file[0].type);\n    const isLt2M = file[0].size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      errorMessage = \"File must be smaller than 2MB!\";\n    }\n    console.log(\"errorMessage\", errorMessage);\n    return errorMessage;\n  }\n\n  fileHandler = fileList => {\n    console.log(\"fileList\", fileList);\n    let fileObj = fileList;\n    if (!fileObj) {\n      this.setState({\n        errorMessage: \"No file uploaded!\"\n      });\n      return false;\n    }\n    console.log(\"fileObj.type:\", fileObj.type);\n    if (\n      !(\n        fileObj.type === \"application/vnd.ms-excel\" ||\n        fileObj.type ===\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      )\n    ) {\n      this.setState({\n        errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\n      });\n      return false;\n    }\n    //just pass the fileObj as parameter\n    ExcelRenderer(fileObj, (err, resp) => {\n      if (err) {\n        console.log(err);\n      } else {\n        let newRows = [];\n        resp.rows.slice(1).map((row, index) => {\n          if (row && row !== \"undefined\") {\n            newRows.push({\n              key: index,\n              id: row[0],\n              level: row[1],\n              gender: row[2],\n              q1: row[3],\n              q2: row[4],\n              q3: row[5],\n              q4: row[6],\n\n            });\n          }\n        });\n        if (newRows.length === 0) {\n          this.setState({\n            errorMessage: \"No data found in file!\"\n          });\n          return false;\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: newRows,\n            errorMessage: null\n          });\n        }\n      }\n    });\n    return false;\n  };\n\n  handleSubmit = async () => {\n    console.log(\"submitting: \", this.state.rows);\n    //submit to API\n    //if successful, banigate and clear the data\n    //this.setState({ rows: [] })\n  };\n\n  handleDelete = key => {\n    const rows = [...this.state.rows];\n    this.setState({ rows: rows.filter(item => item.key !== key) });\n  };\n  handleAdd = () => {\n    const { count, rows } = this.state;\n    const newData = {\n      number: \"bambu\",\n      level: \"User's name\",\n      gender: \"22\",\n      question1: \"Female\",\n      question2: \"Female\",\n      question3: \"Female\",\n      question4: \"Female\",\n      yriltslga: \"Female\",\n      buleg: \"Female\",\n    };\n    this.setState({\n      rows: [newData, ...rows],\n      count: count + 1\n    });\n  };\n  handleRequest = () => {\n    const rows = this.state.rows;\n    this.setState({ isLoading: true });\n    fetch('http://127.0.0.1:5000/prediction/', \n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(rows)\n      })\n      .then(response => response.json())\n      .then(response => {\n        alert(response)\n        this.setState({\n          result: response.result,\n          isLoading: false\n        });\n      });\n  };\n  render() {\n    const columns = this.state.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return (\n      <>\n        <h1>my diplom </h1>\n        {JSON.stringify(this.state.result)}\n        <Row gutter={16}>\n          <Col\n            span={8}\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginBottom: \"5%\"\n            }}\n          >\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <div className=\"page-title\">Upload Farmer Data</div>\n            </div>\n          </Col>\n          <Col span={8}>\n          <Button\n                  onClick={this.handleRequest}\n                  size=\"large\"\n                  type=\"info\"\n                  style={{ marginBottom: 16 }}\n                >\n                  \n                  urgejluuleh\n                </Button>\n          </Col>\n          <Col\n            span={8}\n            align=\"right\"\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            {this.state.rows.length > 0 && (\n              <>\n                <Button\n                  onClick={this.handleAdd}\n                  size=\"large\"\n                  type=\"info\"\n                  style={{ marginBottom: 16 }}\n                >\n                  \n                  Add a row\n                </Button>{\" \"}\n                <Button\n                  onClick={this.handleSubmit}\n                  size=\"large\"\n                  type=\"primary\"\n                  style={{ marginBottom: 16, marginLeft: 10 }}\n                >\n                  Submit Data\n                </Button>\n              </>\n            )}\n          </Col>\n        </Row>\n        <div>\n          <Upload\n            name=\"file\"\n            beforeUpload={this.fileHandler}\n            onRemove={() => this.setState({ rows: [] })}\n            multiple={false}\n          >\n            <Button>\n               Та файлаа оруулна уу\n            </Button>\n          </Upload>\n        </div>\n        \n        <div style={{ marginTop: 20 }}>\n          <Table\n            rowClassName={() => \"editable-row\"}\n            dataSource={this.state.rows}\n            columns={columns}\n          />\n        </div>\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}