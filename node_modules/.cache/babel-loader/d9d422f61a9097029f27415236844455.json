{"ast":null,"code":"import _objectSpread from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/src/components/excelPage.js\";\nimport React, { Component } from \"react\";\nimport { Table, Button, Popconfirm, Row, Col, Form, Upload } from \"antd\";\nimport { ExcelRenderer } from \"react-excel-renderer\";\nimport Allchart from '../allChart';\n\nvar ExcelPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExcelPage, _Component);\n\n  function ExcelPage(props) {\n    var _this;\n\n    _classCallCheck(this, ExcelPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExcelPage).call(this, props));\n\n    _this.handleSave = function (row) {\n      var newData = _toConsumableArray(_this.state.rows);\n\n      var index = newData.findIndex(function (item) {\n        return row.key === item.key;\n      });\n      var item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, row));\n\n      _this.setState({\n        rows: newData\n      });\n    };\n\n    _this.fileHandler = function (fileList) {\n      console.log(\"fileList\", fileList);\n      var fileObj = fileList;\n\n      if (!fileObj) {\n        _this.setState({\n          errorMessage: \"No file uploaded!\"\n        });\n\n        return false;\n      }\n\n      console.log(\"fileObj.type:\", fileObj.type);\n\n      if (!(fileObj.type === \"application/vnd.ms-excel\" || fileObj.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\")) {\n        _this.setState({\n          errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\n        });\n\n        return false;\n      } //just pass the fileObj as parameter\n\n\n      ExcelRenderer(fileObj, function (err, resp) {\n        if (err) {\n          console.log(err);\n        } else {\n          var newRows = [];\n          resp.rows.slice(1).map(function (row, index) {\n            if (row && row !== \"undefined\") {\n              newRows.push({\n                key: index,\n                id: row[0],\n                level: row[1],\n                gender: row[2],\n                q1: row[3],\n                q2: row[4],\n                q3: row[5],\n                q4: row[6]\n              });\n            }\n          });\n\n          if (newRows.length === 0) {\n            _this.setState({\n              errorMessage: \"No data found in file!\"\n            });\n\n            return false;\n          } else {\n            _this.setState({\n              cols: resp.cols,\n              rows: newRows,\n              errorMessage: null\n            });\n          }\n        }\n      });\n      return false;\n    };\n\n    _this.handleDelete = function (key) {\n      var rows = _toConsumableArray(_this.state.rows);\n\n      _this.setState({\n        rows: rows.filter(function (item) {\n          return item.key !== key;\n        })\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var value = event.target.value;\n      var name = event.target.name;\n      var formData = _this.state.formData;\n      formData[name] = value;\n\n      _this.setState({\n        formData: formData\n      });\n    };\n\n    _this.handleRequest = function () {\n      var rows = _this.state.rows;\n      var formData = _this.state.formData;\n      var datas = {\n        \"rows\": rows,\n        \"formData\": formData\n      };\n\n      _this.setState({\n        isLoading: true\n      });\n\n      fetch('http://127.0.0.1:5000/prediction/', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(datas)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        _this.setState({\n          result: response\n        });\n      });\n    };\n\n    _this.state = {\n      cols: [],\n      rows: [],\n      errorMessage: null,\n      result: [],\n      isLoading: false,\n      formData: {\n        coordinatX: \"q2\",\n        coordinatY: \"q3\",\n        covot: 3\n      },\n      columns: [{\n        title: \"Д/д\",\n        dataIndex: \"id\",\n        editable: true\n      }, {\n        title: \"Түвшин\",\n        dataIndex: \"level\",\n        editable: true\n      }, {\n        title: \"Хүйс\",\n        dataIndex: \"gender\",\n        editable: true\n      }, {\n        title: \"Онолын болон практик хичээлийн алийг нь судлахад тухайн сэдвээр ойлголт авахад илүү хялбар байдаг вэ?\",\n        dataIndex: \"q1\",\n        editable: true\n      }, {\n        title: \"Сурах үйл ажиллагаанд илүү их хүчин чармайлт гаргахад юу нөлөөлдөг вэ?\",\n        dataIndex: \"q2\",\n        editable: true\n      }, {\n        title: \"Хичээлийн үеэр ямар нөхцөлд буюу ямар үед хамгийн идэвхтэй суралцдаг вэ?\",\n        dataIndex: \"q3\",\n        editable: true\n      }, {\n        title: \"Долоо хоногт дунджаар хичээл хийхэд хэдэн цагийг зарцуулж байна? Үүнийг ихэсгэх / багасгах бодол байгаа юу?\",\n        dataIndex: \"q4\",\n        editable: true\n      }, {\n        title: \"Устгах\",\n        dataIndex: \"action\",\n        render: function render(text, record) {\n          return _this.state.rows.length >= 1 ? React.createElement(Popconfirm, {\n            title: \"Sure to delete?\",\n            onConfirm: function onConfirm() {\n              return _this.handleDelete(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, \"\\u0423\\u0441\\u0442\\u0433\\u0430\\u0445\")) : null;\n        }\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ExcelPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formData = this.state.formData;\n      var result = this.state.result;\n      var isLoading = this.state.isLoading;\n      var covot = [];\n\n      for (var i = 1; i <= 4; i = +(i + 1).toFixed(1)) {\n        covot.push(React.createElement(\"option\", {\n          key: i,\n          value: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, i));\n      }\n\n      var seasonNamesX = [];\n      var inputRows = [\"level\", \"gender\", \"q1\", \"q2\", \"q3\", \"q4\"];\n\n      for (var i = 0; i < inputRows.length; i++) {\n        seasonNamesX.push(React.createElement(\"option\", {\n          key: inputRows[i],\n          value: inputRows[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, inputRows[i]));\n      }\n\n      var seasonNamesY = [];\n\n      for (var i = 0; i < inputRows.length; i++) {\n        seasonNamesY.push(React.createElement(\"option\", {\n          key: inputRows[i],\n          value: inputRows[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, inputRows[i]));\n      }\n\n      var columns = this.state.columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              editable: col.editable,\n              dataIndex: col.dataIndex,\n              title: col.title,\n              handleSave: _this2.handleSave\n            };\n          }\n        });\n      });\n      return React.createElement(React.Fragment, null, this.state.rows.length > 0 && React.createElement(Row, {\n        gutter: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(Col, {\n        span: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"exampleFormControlSelect1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"X: \"), React.createElement(\"select\", {\n        class: \"form-control\",\n        id: \"exampleFormControlSelect1\",\n        as: \"select\",\n        value: formData.coordinatX,\n        name: \"coordinatX\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \" \", seasonNamesX), React.createElement(\"label\", {\n        for: \"exampleFormControlSelect1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Y:\"), React.createElement(\"select\", {\n        class: \"form-control\",\n        id: \"exampleFormControlSelect1\",\n        as: \"select\",\n        value: formData.coordinatY,\n        name: \"coordinatY\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \" \", seasonNamesY), React.createElement(\"label\", {\n        for: \"exampleFormControlSelect1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"\\u0425\\u044D\\u0434 \\u0445\\u0443\\u0432\\u0430\\u0430\\u0445 \\u0432\\u044D\"), React.createElement(\"select\", {\n        class: \"form-control\",\n        id: \"exampleFormControlSelect1\",\n        as: \"select\",\n        value: formData.covot,\n        name: \"covot\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \" \", covot)), React.createElement(Button, {\n        onClick: this.handleRequest,\n        size: \"large\",\n        type: \"info\",\n        style: {\n          marginBottom: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"\\u0410\\u043D\\u0433\\u0438\\u043B\\u0430\\u0445\")), React.createElement(Col, {\n        span: 8,\n        align: \"right\",\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, isLoading ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Allchart, {\n        formData: formData,\n        data: result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \" \"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        name: \"file\",\n        beforeUpload: this.fileHandler,\n        onRemove: function onRemove() {\n          return _this2.setState({\n            rows: []\n          });\n        },\n        multiple: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"\\u0422\\u0430 \\u0444\\u0430\\u0439\\u043B\\u0430\\u0430 \\u043E\\u0440\\u0443\\u0443\\u043B\\u043D\\u0430 \\u0443\\u0443\"))), this.state.rows.length > 0 && React.createElement(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(Table, {\n        rowClassName: function rowClassName() {\n          return \"editable-row\";\n        },\n        dataSource: this.state.rows,\n        columns: columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ExcelPage;\n}(Component);\n\nexport { ExcelPage as default };","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/src/components/excelPage.js"],"names":["React","Component","Table","Button","Popconfirm","Row","Col","Form","Upload","ExcelRenderer","Allchart","ExcelPage","props","handleSave","row","newData","state","rows","index","findIndex","item","key","splice","setState","fileHandler","fileList","console","log","fileObj","errorMessage","type","err","resp","newRows","slice","map","push","id","level","gender","q1","q2","q3","q4","length","cols","handleDelete","filter","handleChange","event","value","target","name","formData","handleRequest","datas","isLoading","fetch","headers","method","body","JSON","stringify","then","response","json","result","coordinatX","coordinatY","covot","columns","title","dataIndex","editable","render","text","record","i","toFixed","seasonNamesX","inputRows","seasonNamesY","col","onCell","marginBottom","display","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button, Popconfirm, Row, Col,Form, Upload } from \"antd\";\nimport { ExcelRenderer } from \"react-excel-renderer\";\nimport Allchart from '../allChart'\nexport default class ExcelPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cols: [],\n      rows: [],\n      errorMessage: null,\n      result:[],\n      isLoading:false,\n      formData: {\n        coordinatX: \"q2\",\n        coordinatY: \"q3\",\n        covot: 3,\n      },\n      columns: [\n        {\n          title: \"Д/д\",\n          dataIndex: \"id\",\n          editable: true\n        },\n        {\n          title: \"Түвшин\",\n          dataIndex: \"level\",\n          editable: true\n        },\n        {\n          title: \"Хүйс\",\n          dataIndex: \"gender\",\n          editable: true\n        },\n        {\n          title: \"Онолын болон практик хичээлийн алийг нь судлахад тухайн сэдвээр ойлголт авахад илүү хялбар байдаг вэ?\",\n          dataIndex: \"q1\",\n          editable: true\n        },\n        {\n          title: \"Сурах үйл ажиллагаанд илүү их хүчин чармайлт гаргахад юу нөлөөлдөг вэ?\",\n          dataIndex: \"q2\",\n          editable: true\n        },\n        {\n          title: \"Хичээлийн үеэр ямар нөхцөлд буюу ямар үед хамгийн идэвхтэй суралцдаг вэ?\",\n          dataIndex: \"q3\",\n          editable: true\n        },\n        {\n          title: \"Долоо хоногт дунджаар хичээл хийхэд хэдэн цагийг зарцуулж байна? Үүнийг ихэсгэх / багасгах бодол байгаа юу?\",\n          dataIndex: \"q4\",\n          editable: true\n        },\n        {\n          title: \"Устгах\",\n          dataIndex: \"action\",\n          render: (text, record) =>\n            this.state.rows.length >= 1 ? (\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => this.handleDelete(record.key)}\n              >\n                <p>Устгах</p>\n              </Popconfirm>\n            ) : null\n        }\n      ]\n    };\n  }\n\n  handleSave = row => {\n    const newData = [...this.state.rows];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row\n    });\n    this.setState({ rows: newData });\n  };\n\n\n\n  fileHandler = fileList => {\n    console.log(\"fileList\", fileList);\n    let fileObj = fileList;\n    if (!fileObj) {\n      this.setState({\n        errorMessage: \"No file uploaded!\"\n      });\n      return false;\n    }\n    console.log(\"fileObj.type:\", fileObj.type);\n    if (\n      !(\n        fileObj.type === \"application/vnd.ms-excel\" ||\n        fileObj.type ===\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      )\n    ) {\n      this.setState({\n        errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\n      });\n      return false;\n    }\n    //just pass the fileObj as parameter\n    ExcelRenderer(fileObj, (err, resp) => {\n      if (err) {\n        console.log(err);\n      } else {\n        let newRows = [];\n        resp.rows.slice(1).map((row, index) => {\n          if (row && row !== \"undefined\") {\n            newRows.push({\n              key: index,\n              id: row[0],\n              level: row[1],\n              gender: row[2],\n              q1: row[3],\n              q2: row[4],\n              q3: row[5],\n              q4: row[6],\n\n            });\n          }\n        });\n        if (newRows.length === 0) {\n          this.setState({\n            errorMessage: \"No data found in file!\"\n          });\n          return false;\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: newRows,\n            errorMessage: null\n          });\n        }\n      }\n    });\n    return false;\n  };\n\n\n  handleDelete = key => {\n    const rows = [...this.state.rows];\n    this.setState({ rows: rows.filter(item => item.key !== key) });\n  };\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    var formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  }\n  handleRequest = () => {\n    const rows = this.state.rows;\n    const formData = this.state.formData;\n    const datas = {\"rows\":rows, \"formData\":formData}\n    this.setState({ isLoading: true });\n    fetch('http://127.0.0.1:5000/prediction/', \n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(datas)\n      })\n      .then(response => response.json())\n      .then(response => {\n        this.setState({\n          result: response,\n        });\n      });\n  };\n  render() {\n    const formData = this.state.formData;\n    const result = this.state.result;\n    const isLoading = this.state.isLoading;\n\n    var covot = []\n    for (var i = 1; i <= 4; i = +(i + 1).toFixed(1)) {\n      covot.push(<option key = {i} value = {i}>{i}</option>);\n    }\n    var seasonNamesX = []\n    var inputRows = [\"level\",\"gender\",\"q1\",\"q2\",\"q3\",\"q4\"]\n    for (var i = 0; i < inputRows.length; i++)\n    {\n      seasonNamesX.push(<option key = {inputRows[i]} value = {inputRows[i]}>{inputRows[i]}</option>);\n    }\n    var seasonNamesY = []\n    for (var i = 0; i < inputRows.length; i++)\n    {\n      seasonNamesY.push(<option key = {inputRows[i]} value = {inputRows[i]}>{inputRows[i]}</option>);\n    }\n\n\n\n    const columns = this.state.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return (\n      <>\n      {this.state.rows.length > 0 && (\n        <Row gutter={16}>\n        <Col span={1}></Col>\n          <Col span={4}>\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlSelect1\">X: </label>\n            <select class=\"form-control\" id=\"exampleFormControlSelect1\"as=\"select\" value={formData.coordinatX} name=\"coordinatX\" onChange={this.handleChange}> {seasonNamesX}</select>\n            <label for=\"exampleFormControlSelect1\">Y:</label>\n            <select class=\"form-control\" id=\"exampleFormControlSelect1\"as=\"select\" value={formData.coordinatY} name=\"coordinatY\" onChange={this.handleChange}> {seasonNamesY}</select>\n            <label for=\"exampleFormControlSelect1\">Хэд хуваах вэ</label>\n            <select class=\"form-control\" id=\"exampleFormControlSelect1\"as=\"select\" value={formData.covot} name=\"covot\" onChange={this.handleChange}> {covot}</select>\n          </div>\n            <Button onClick={this.handleRequest} size=\"large\" type=\"info\" style={{ marginBottom: 16 }} >Ангилах</Button>\n\n          </Col>\n          <Col\n            span={8}\n            align=\"right\"\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            {isLoading ? \n        <div><Allchart formData={formData} data={result}></Allchart></div>:<p> </p> }\n          </Col>\n        </Row>\n        )}\n\n\n        <div>\n          <Upload\n            name=\"file\"\n            beforeUpload={this.fileHandler}\n            onRemove={() => this.setState({ rows: [] })}\n            multiple={false}\n          >\n            <Button>\n               Та файлаа оруулна уу\n            </Button>\n          </Upload>\n        </div>\n        {this.state.rows.length > 0 && (\n        <div style={{ marginTop: 20 }}>\n          <Table\n            rowClassName={() => \"editable-row\"}\n            dataSource={this.state.rows}\n            columns={columns}\n          />\n        </div>)}\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}