{"ast":null,"code":"var _jsxFileName = \"/home/tuguldur/MyDream/Diplom/notepad/src/_screens/classScreen.js\";\nimport React from 'react';\nimport './classCss.css';\nimport { Link } from 'react-router-dom';\nimport { rootConstants } from '../_constants';\nimport { connect } from 'react-redux';\nimport history from '../_store/history';\nimport schoolData from '../_data/schoolData';\nimport PlanPrint from '../_components/_lessonPlan/planPrint';\nimport { allActions } from '../_actions';\nimport GridLayout from 'react-grid-layout';\nimport WidthProvider from '../_components/_lessonPlan/WidthProvider';\nconst ResponsiveGridLayout = WidthProvider(GridLayout);\nconst board = {\n  columns: [{\n    id: 1,\n    title: 'Backlog',\n    cards: [{\n      id: 1,\n      title: 'Add card',\n      description: 'Add capability to add a card in a column'\n    }]\n  }, {\n    id: 2,\n    title: 'Doing',\n    cards: [{\n      id: 2,\n      title: 'Drag-n-drop support',\n      description: 'Move a card between the columns'\n    }]\n  }]\n};\n\nclass classScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      isState: false,\n      isActive: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.lessonPlanRequest(\"hihah\");\n  }\n\n  handleClick(data, islog) {\n    if (islog) {\n      this.props.modalSchoolFalse(data);\n    } else {\n      this.props.newSchoolName(data);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"container-fluid \",\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(ResponsiveGridLayout, {\n      className: \"layout\",\n      cols: 12,\n      rowHeight: 20,\n      width: 1300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row planTitle rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: \"1\",\n      class: \"col-sm-3 planBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"s\"), React.createElement(\"div\", {\n      key: \"2\",\n      class: \"col-sm-3 planBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"d\"), React.createElement(\"div\", {\n      key: \"3\",\n      class: \"col-sm-3 planBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"d\"), React.createElement(\"div\", {\n      key: \"4\",\n      class: \"col-sm-3 planBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"d\"), React.createElement(\"div\", {\n      key: \"5\",\n      class: \"col-sm-3 planBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"d\"), React.createElement(\"div\", {\n      key: \"6\",\n      class: \"col-sm-3 planBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"d\"), React.createElement(\"div\", {\n      key: \"7\",\n      class: \"col-sm-3 planBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"d\"), React.createElement(\"div\", {\n      key: \"sdfs\",\n      class: \"col-sm-3 planBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"d\"))));\n  }\n\n}\n\nexport default connect(allActions.mapStateToProps, allActions.mapDispatchToProps)(classScreen);","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/notepad/src/_screens/classScreen.js"],"names":["React","Link","rootConstants","connect","history","schoolData","PlanPrint","allActions","GridLayout","WidthProvider","ResponsiveGridLayout","board","columns","id","title","cards","description","classScreen","Component","constructor","props","handleClick","bind","state","isState","isActive","componentDidMount","lessonPlanRequest","data","islog","modalSchoolFalse","newSchoolName","render","background","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAAUC,IAAV,QAAsB,kBAAtB;AACA,SAAQC,aAAR,QAA4B,eAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAQC,OAAR,MAAsB,mBAAtB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AAEA,MAAMC,oBAAoB,GAAGD,aAAa,CAACD,UAAD,CAA1C;AAEA,MAAMG,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,SAFT;AAGEC,IAAAA,KAAK,EAAE,CACL;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,UAFT;AAGEE,MAAAA,WAAW,EAAE;AAHf,KADK;AAHT,GADO,EAYP;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,OAFT;AAGEC,IAAAA,KAAK,EAAE,CACL;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,qBAFT;AAGEE,MAAAA,WAAW,EAAE;AAHf,KADK;AAHT,GAZO;AADG,CAAd;;AA0BA,MAAMC,WAAN,SAA0BjB,KAAK,CAACkB,SAAhC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,KAAL,CAAWO,iBAAX,CAA6B,OAA7B;AAED;;AAGDN,EAAAA,WAAW,CAACO,IAAD,EAAOC,KAAP,EAAc;AACvB,QAAGA,KAAH,EAAS;AACP,WAAKT,KAAL,CAAWU,gBAAX,CAA4BF,IAA5B;AACD,KAFD,MAEK;AACH,WAAKR,KAAL,CAAWW,aAAX,CAAyBH,IAAzB;AACD;AAEF;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAC,kBAAX;AAA8B,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAC;AAAZ,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,oBAAD;AAAsB,MAAA,SAAS,EAAC,QAAhC;AAAyC,MAAA,IAAI,EAAE,EAA/C;AAAmD,MAAA,SAAS,EAAE,EAA9D;AAAkE,MAAA,KAAK,EAAE,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,KAAK,EAAC,uBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAC,GAAT;AAAY,MAAA,KAAK,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAK,MAAA,GAAG,EAAC,GAAT;AAAY,MAAA,KAAK,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAK,MAAA,GAAG,EAAC,GAAT;AAAY,MAAA,KAAK,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,EAIE;AAAK,MAAA,GAAG,EAAC,GAAT;AAAY,MAAA,KAAK,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAKE;AAAK,MAAA,GAAG,EAAC,GAAT;AAAY,MAAA,KAAK,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,EAME;AAAK,MAAA,GAAG,EAAC,GAAT;AAAY,MAAA,KAAK,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,EAOE;AAAK,MAAA,GAAG,EAAC,GAAT;AAAY,MAAA,KAAK,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,EAQE;AAAK,MAAA,GAAG,EAAC,MAAT;AAAe,MAAA,KAAK,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,CADA,CADF,CADF;AAmBH;;AA9CqC;;AAkD1C,eAAe9B,OAAO,CAACI,UAAU,CAAC2B,eAAZ,EAA4B3B,UAAU,CAAC4B,kBAAvC,CAAP,CAAkElB,WAAlE,CAAf","sourcesContent":["import React from 'react';\nimport './classCss.css';\nimport {  Link } from 'react-router-dom';\nimport {rootConstants} from '../_constants';\nimport { connect } from 'react-redux';\nimport  history  from '../_store/history';\nimport schoolData from '../_data/schoolData';\nimport PlanPrint from '../_components/_lessonPlan/planPrint';\nimport {allActions} from '../_actions'\nimport GridLayout from 'react-grid-layout';\nimport WidthProvider from '../_components/_lessonPlan/WidthProvider'\n\nconst ResponsiveGridLayout = WidthProvider(GridLayout);\n\nconst board = {\n  columns: [\n    {\n      id: 1,\n      title: 'Backlog',\n      cards: [\n        {\n          id: 1,\n          title: 'Add card',\n          description: 'Add capability to add a card in a column'\n        },\n      ]\n    },\n    {\n      id: 2,\n      title: 'Doing',\n      cards: [\n        {\n          id: 2,\n          title: 'Drag-n-drop support',\n          description: 'Move a card between the columns'\n        },\n      ]\n    }\n  ]\n}\nclass classScreen extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.state = {\n          isState: false,\n          isActive: true,\n          \n        };\n      }\n      componentDidMount() {\n        this.props.lessonPlanRequest(\"hihah\");\n\n      }\n\n      \n      handleClick(data, islog) {\n        if(islog){\n          this.props.modalSchoolFalse(data)\n        }else{\n          this.props.newSchoolName(data)\n        }\n\n      }\n\n      render() {\n        return (\n          <div class=\"container-fluid \" style={{background:\"white\"}}>\n            <ResponsiveGridLayout className=\"layout\" cols={12} rowHeight={20} width={1300}>\n            <div  class=\"row planTitle rounded\">\n              <div key=\"1\"class=\"col-sm-3 planBody\">s</div>\n              <div key=\"2\"class=\"col-sm-3 planBody\">d</div>\n              <div key=\"3\"class=\"col-sm-3 planBody\">d</div>\n              <div key=\"4\"class=\"col-sm-3 planBody\">d</div>\n              <div key=\"5\"class=\"col-sm-3 planBody\">d</div>\n              <div key=\"6\"class=\"col-sm-3 planBody\">d</div>\n              <div key=\"7\"class=\"col-sm-3 planBody\">d</div>\n              <div key=\"sdfs\"class=\"col-sm-3 planBody\">d</div>\n            </div>\n          </ResponsiveGridLayout>\n           </div>\n          \n\n        )\n      \n    }\n}\n\n\nexport default connect(allActions.mapStateToProps,allActions.mapDispatchToProps)(classScreen);\n"]},"metadata":{},"sourceType":"module"}