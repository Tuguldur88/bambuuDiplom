{"ast":null,"code":"var _jsxFileName = \"/home/tuguldur/MyDream/Diplom/notepad/src/_components/dataPrints.js\";\nimport React from 'react';\nimport './componentcss.css';\nimport { connect } from 'react-redux';\nimport { rootConstants } from '../_constants';\nimport { allActions } from '../_actions';\nimport LessonDatas from '../_data/lessonData';\n\nclass dataPrints extends React.Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.hoverOn = this.hoverOn.bind(this);\n    this.hoverOff = this.hoverOff.bind(this);\n    this.modalState = this.modalState.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      data: [],\n      colors: \"white\",\n      activeStatus: false,\n      toggle: false,\n      bluecolor: {\n        background: \"blue\"\n      },\n      whitecolor: {\n        background: \"white\"\n      }\n    };\n  }\n\n  handleClick(person) {\n    alert(\"sdfsd\");\n  }\n\n  hoverOn(data) {\n    if (this.state.activeStatus) {\n      this.setState({\n        activeStatus: false\n      });\n    } else {\n      this.setState({\n        activeStatus: true\n      });\n      this.state.data.push({\n        \"id\": data\n      });\n    }\n  }\n\n  hoverOff() {\n    this.setState({\n      colors: \"white\"\n    });\n  }\n\n  modalState() {\n    alert(JSON.stringify(this.state.data));\n  }\n\n  toggle(event) {\n    this.setState(prevState => ({\n      toggle: !prevState.toggle\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, LessonDatas.map((person, i) => React.createElement(\"table\", {\n      style: this.state.activeStatus ? this.state.bluecolor : this.state.whitecolor,\n      className: person.id,\n      onClick: () => this.hoverOn(person.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        background: this.state.colors\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, person.index, \"-\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, person.lesson_name, \"-\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"(\", person.kridit, \")-\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, person.season), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, JSON.stringify(this.state.data))))), React.createElement(\"a\", {\n      className: \"btn\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.toggle ? 'Close modal' : 'Open modal'), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"sfdsdfs\"));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    lessonData: state.lessonData,\n    counter: state.counter,\n    islog: state.islog,\n    Reqislog: state.Reqislog,\n    graphLessonName: state.graphLessonName,\n    graphLessonData: state.graphLessonData,\n    schoolName: state.schoolName\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    newLesson: data1 => dispatch({\n      type: rootConstants.ROOT_REQUEST,\n      data: data1\n    }),\n    chartState: data1 => dispatch({\n      type: rootConstants.MODAL_REQUEST,\n      data: data1\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(dataPrints);","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/notepad/src/_components/dataPrints.js"],"names":["React","connect","rootConstants","allActions","LessonDatas","dataPrints","Component","constructor","handleClick","bind","hoverOn","hoverOff","modalState","toggle","state","data","colors","activeStatus","bluecolor","background","whitecolor","person","alert","setState","push","JSON","stringify","event","prevState","render","map","i","id","index","lesson_name","kridit","season","mapStateToProps","lessonData","counter","islog","Reqislog","graphLessonName","graphLessonData","schoolName","mapDispatchToProps","dispatch","newLesson","data1","type","ROOT_REQUEST","chartState","MODAL_REQUEST"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './componentcss.css';\nimport {connect} from 'react-redux';\nimport {rootConstants} from '../_constants';\nimport {allActions} from '../_actions'\nimport LessonDatas from '../_data/lessonData';\n\nclass dataPrints extends React.Component {\n   constructor() {\n      super();\n      this.handleClick = this.handleClick.bind(this);\n      this.hoverOn = this.hoverOn.bind(this);\n      this.hoverOff = this.hoverOff.bind(this);\n      this.modalState = this.modalState.bind(this);\n      this.toggle = this.toggle.bind(this);\n      this.state = {\n         data: [],\n         colors:\"white\",\n         activeStatus: false,\n         toggle: false,\n         bluecolor:{background: \"blue\"},\n         whitecolor:{background: \"white\"}\n      }\n   }\n   handleClick(person) {\n      alert(\"sdfsd\")\n   }\n   hoverOn(data){\n      if(this.state.activeStatus)\n      {\n         this.setState({  activeStatus: false});\n\n\n         \n      }else\n      {  \n         this.setState({ activeStatus: true});\n         this.state.data.push({\"id\":data})\n      }\n      \n   }\n   hoverOff(){\n      this.setState({ colors: \"white\" });\n   }\n   \n   modalState(){\n      alert(JSON.stringify(this.state.data))\n   }\n   toggle(event) {\n      this.setState((prevState) => ({\n        toggle: !prevState.toggle\n      }));\n    }\n\n    \n   render() {\n        \n      return (\n         <div>\n            {LessonDatas.map((person, i) => \n            <table style={this.state.activeStatus ? this.state.bluecolor : this.state.whitecolor} className={person.id}\n                  onClick={() => this.hoverOn(person.id)}>\n               <tr style={{background: this.state.colors}} >\n               <td>{person.index}-</td>\n                     <td>{person.lesson_name}-</td>\n                     <td>({person.kridit})-</td>\n                     <td>{person.season}</td>\n                     <td>{JSON.stringify(this.state.data)}</td>\n               </tr>\n            </table>\n            )}\n            <a className=\"btn\" onClick={this.toggle}>{this.state.toggle ? 'Close modal' : 'Open modal'}</a>\n            <button>sfdsdfs</button>\n         </div>\n      );\n   }\n}\nfunction mapStateToProps(state) {\n   return {\n      lessonData: state.lessonData,\n      counter: state.counter,\n      islog: state.islog,\n      Reqislog: state.Reqislog,\n      graphLessonName: state.graphLessonName,\n      graphLessonData: state.graphLessonData,\n      schoolName: state.schoolName,\n\n\n\n   }\n}\nfunction mapDispatchToProps(dispatch) {\n   return {\n      newLesson: (data1) => dispatch({type: rootConstants.ROOT_REQUEST , data: data1}),\n      chartState: (data1) => dispatch({type: rootConstants.MODAL_REQUEST , data: data1}),\n\n   }\n}\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(dataPrints);"]},"metadata":{},"sourceType":"module"}