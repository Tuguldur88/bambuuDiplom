{"ast":null,"code":"import { rootConstants } from '../_constants';\nexport const allActions = {\n  mapStateToProps,\n  mapDispatchToProps\n};\n\nfunction mapStateToProps(state) {\n  return {\n    lessonData: state.lessonData,\n    counter: state.counter,\n    GrapIsLog: state.GrapIsLog,\n    LessonIsLog: state.LessonIsLog,\n    SchoolIsLog: state.SchoolIsLog,\n    graphLessonName: state.graphLessonName,\n    graphLessonData: state.graphLessonData,\n    schoolName: state.schoolName\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    newSchoolName: datas => dispatch({\n      type: rootConstants.SCHOOL_NAME,\n      data: datas\n    }),\n    newLesson: data1 => dispatch({\n      type: rootConstants.ROOT_REQUEST,\n      data: data1\n    }),\n    chartState: data1 => dispatch({\n      type: rootConstants.MODAL_REQUEST,\n      data: data1\n    }),\n    lessonDataPush: data1 => dispatch({\n      type: rootConstants.LESSONS_DATA_PUSH,\n      data: data1\n    }),\n    lessonDataPop: data1 => dispatch({\n      type: rootConstants.LESSONS_DATA_POP,\n      data: data1\n    }),\n    modalTrue: () => dispatch({\n      type: rootConstants.MODAL_TRUE\n    }),\n    modalFalse: () => dispatch({\n      type: rootConstants.MODAL_FALSE\n    })\n  };\n}","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/notepad/src/_actions/actions.js"],"names":["rootConstants","allActions","mapStateToProps","mapDispatchToProps","state","lessonData","counter","GrapIsLog","LessonIsLog","SchoolIsLog","graphLessonName","graphLessonData","schoolName","dispatch","newSchoolName","datas","type","SCHOOL_NAME","data","newLesson","data1","ROOT_REQUEST","chartState","MODAL_REQUEST","lessonDataPush","LESSONS_DATA_PUSH","lessonDataPop","LESSONS_DATA_POP","modalTrue","MODAL_TRUE","modalFalse","MODAL_FALSE"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,eAA5B;AAEA,OAAO,MAAMC,UAAU,GAAG;AACtBC,EAAAA,eADsB;AAEtBC,EAAAA;AAFsB,CAAnB;;AAKP,SAASD,eAAT,CAAyBE,KAAzB,EAAgC;AAC5B,SAAO;AACJC,IAAAA,UAAU,EAAED,KAAK,CAACC,UADd;AAEJC,IAAAA,OAAO,EAAEF,KAAK,CAACE,OAFX;AAIJC,IAAAA,SAAS,EAAEH,KAAK,CAACG,SAJb;AAKJC,IAAAA,WAAW,EAAEJ,KAAK,CAACI,WALf;AAMJC,IAAAA,WAAW,EAAEL,KAAK,CAACK,WANf;AAQJC,IAAAA,eAAe,EAAEN,KAAK,CAACM,eARnB;AASJC,IAAAA,eAAe,EAAEP,KAAK,CAACO,eATnB;AAUJC,IAAAA,UAAU,EAAER,KAAK,CAACQ;AAVd,GAAP;AAYD;;AAEH,SAAST,kBAAT,CAA4BU,QAA5B,EAAsC;AAClC,SAAO;AACHC,IAAAA,aAAa,EAAGC,KAAD,IAAWF,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEhB,aAAa,CAACiB,WAArB;AAAmCC,MAAAA,IAAI,EAACH;AAAxC,KAAD,CAD/B;AAEHI,IAAAA,SAAS,EAAGC,KAAD,IAAWP,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEhB,aAAa,CAACqB,YAArB;AAAoCH,MAAAA,IAAI,EAAEE;AAA1C,KAAD,CAF3B;AAGHE,IAAAA,UAAU,EAAGF,KAAD,IAAWP,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEhB,aAAa,CAACuB,aAArB;AAAqCL,MAAAA,IAAI,EAAEE;AAA3C,KAAD,CAH5B;AAIHI,IAAAA,cAAc,EAAGJ,KAAD,IAAWP,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEhB,aAAa,CAACyB,iBAArB;AAAyCP,MAAAA,IAAI,EAAEE;AAA/C,KAAD,CAJhC;AAKHM,IAAAA,aAAa,EAAGN,KAAD,IAAWP,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEhB,aAAa,CAAC2B,gBAArB;AAAwCT,MAAAA,IAAI,EAAEE;AAA9C,KAAD,CAL/B;AAMHQ,IAAAA,SAAS,EAAE,MAAMf,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEhB,aAAa,CAAC6B;AAArB,KAAD,CANtB;AAOHC,IAAAA,UAAU,EAAE,MAAMjB,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEhB,aAAa,CAAC+B;AAArB,KAAD;AAPvB,GAAP;AASH","sourcesContent":["import {rootConstants} from '../_constants';\n\nexport const allActions = {\n    mapStateToProps,\n    mapDispatchToProps\n};\n\nfunction mapStateToProps(state) {\n    return {\n       lessonData: state.lessonData,\n       counter: state.counter,\n\n       GrapIsLog: state.GrapIsLog,\n       LessonIsLog: state.LessonIsLog,\n       SchoolIsLog: state.SchoolIsLog,\n\n       graphLessonName: state.graphLessonName,\n       graphLessonData: state.graphLessonData,\n       schoolName: state.schoolName,\n    }\n  }\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        newSchoolName: (datas) => dispatch({type: rootConstants.SCHOOL_NAME , data:datas}),\n        newLesson: (data1) => dispatch({type: rootConstants.ROOT_REQUEST , data: data1}),\n        chartState: (data1) => dispatch({type: rootConstants.MODAL_REQUEST , data: data1}),\n        lessonDataPush: (data1) => dispatch({type: rootConstants.LESSONS_DATA_PUSH , data: data1}),\n        lessonDataPop: (data1) => dispatch({type: rootConstants.LESSONS_DATA_POP , data: data1}),\n        modalTrue: () => dispatch({type: rootConstants.MODAL_TRUE }),\n        modalFalse: () => dispatch({type: rootConstants.MODAL_FALSE }),\n    }\n}"]},"metadata":{},"sourceType":"module"}