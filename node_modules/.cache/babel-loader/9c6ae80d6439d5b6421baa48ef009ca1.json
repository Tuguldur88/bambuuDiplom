{"ast":null,"code":"var _jsxFileName = \"/home/tuguldur/MyDream/Diplom/notepad/src/_components/_lessonPlan/WidthProvider.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nconst initialState = {\n  width: 1280\n};\n\nconst WidthProvider = ComposedComponent => {\n  var _class, _temp;\n\n  return _temp = _class = class extends Component {\n    // added a timeout to account for sidebar animation time\n    componentDidMount() {\n      this.mounted = true;\n      window.addEventListener('resize', this.onWindowResize);\n      this.onWindowResize();\n    }\n\n    componentWillUnmount() {\n      this.mounted = false;\n      window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    constructor(props) {\n      super(props);\n      this.mounted = false;\n\n      this.onWindowResize = () => {\n        setTimeout(() => {\n          this.calculateWidth();\n        }, 200);\n      };\n\n      this.calculateWidth = () => {\n        if (!this.mounted) return;\n        let node = ReactDOM.findDOMNode(this);\n\n        if (node instanceof HTMLElement) {\n          this.setState({\n            width: node.offsetWidth\n          });\n        }\n      };\n\n      this.state = initialState;\n    }\n\n    render() {\n      if (this.props.measureBeforeMount && !this.mounted) {\n        return React.createElement(\"div\", {\n          className: this.props.className,\n          style: this.props.style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(ComposedComponent, Object.assign({}, this.props, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n\n  }, _class.propTypes = {\n    measureBeforeMount: PropTypes.bool\n  }, _class.defaultProps = {\n    measureBeforeMount: false\n  }, _temp;\n};\n\nexport default WidthProvider;","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/notepad/src/_components/_lessonPlan/WidthProvider.js"],"names":["React","Component","PropTypes","ReactDOM","initialState","width","WidthProvider","ComposedComponent","componentDidMount","mounted","window","addEventListener","onWindowResize","componentWillUnmount","removeEventListener","constructor","props","setTimeout","calculateWidth","node","findDOMNode","HTMLElement","setState","offsetWidth","state","render","measureBeforeMount","className","style","propTypes","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAArB;;AAIA,MAAMC,aAAa,GAAGC,iBAAiB;AAAA;;AAAA,0BAAI,cAAcN,SAAd,CAAwB;AAWlE;AAgBAO,IAAAA,iBAAiB,GAAI;AACpB,WAAKC,OAAL,GAAe,IAAf;AAEAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,cAAvC;AAEA,WAAKA,cAAL;AACA;;AAEDC,IAAAA,oBAAoB,GAAI;AACvB,WAAKJ,OAAL,GAAe,KAAf;AAEAC,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqC,KAAKF,cAA1C;AACA;;AAEDG,IAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,YAAMA,KAAN;AADkB,WAhCnBP,OAgCmB,GAhCT,KAgCS;;AAAA,WA7BnBG,cA6BmB,GA7BF,MAAM;AACtBK,QAAAA,UAAU,CAAC,MAAM;AAChB,eAAKC,cAAL;AACA,SAFS,EAEP,GAFO,CAAV;AAGA,OAyBkB;;AAAA,WAvBnBA,cAuBmB,GAvBF,MAAM;AACtB,YAAG,CAAC,KAAKT,OAAT,EAAkB;AAClB,YAAIU,IAAI,GAAGhB,QAAQ,CAACiB,WAAT,CAAqB,IAArB,CAAX;;AAEA,YAAGD,IAAI,YAAYE,WAAnB,EAAgC;AAC/B,eAAKC,QAAL,CAAc;AAAEjB,YAAAA,KAAK,EAAEc,IAAI,CAACI;AAAd,WAAd;AACA;AACD,OAgBkB;;AAGlB,WAAKC,KAAL,GAAapB,YAAb;AACA;;AAEDqB,IAAAA,MAAM,GAAI;AACT,UAAG,KAAKT,KAAL,CAAWU,kBAAX,IAAiC,CAAC,KAAKjB,OAA1C,EAAmD;AAClD,eAAO;AAAK,UAAA,SAAS,EAAE,KAAKO,KAAL,CAAWW,SAA3B;AAAsC,UAAA,KAAK,EAAE,KAAKX,KAAL,CAAWY,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AAED,aAAO,oBAAC,iBAAD,oBAAuB,KAAKZ,KAA5B,EAAuC,KAAKQ,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACA;;AArDiE,GAA5B,SAC/BK,SAD+B,GACnB;AAClBH,IAAAA,kBAAkB,EAAExB,SAAS,CAAC4B;AADZ,GADmB,SAK/BC,YAL+B,GAKhB;AACrBL,IAAAA,kBAAkB,EAAE;AADC,GALgB;AAAA,CAAvC;;AAwDA,eAAepB,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\n\nconst initialState = {\n\twidth: 1280\n}\n\nconst WidthProvider = ComposedComponent => class extends Component {\n\tstatic propTypes = {\n\t\tmeasureBeforeMount: PropTypes.bool\n\t}\n\n\tstatic defaultProps = {\n\t\tmeasureBeforeMount: false\n\t}\n\n\tmounted = false\n\n\t// added a timeout to account for sidebar animation time\n\tonWindowResize = () => {\n\t\tsetTimeout(() => {\n\t\t\tthis.calculateWidth()\n\t\t}, 200)\n\t}\n\n\tcalculateWidth = () => {\n\t\tif(!this.mounted) return\n\t\tlet node = ReactDOM.findDOMNode(this);\n\n\t\tif(node instanceof HTMLElement) {\n\t\t\tthis.setState({ width: node.offsetWidth })\n\t\t}\n\t}\n\n\tcomponentDidMount () {\n\t\tthis.mounted = true\n\n\t\twindow.addEventListener('resize', this.onWindowResize)\n\n\t\tthis.onWindowResize()\n\t}\n\n\tcomponentWillUnmount () {\n\t\tthis.mounted = false\n\n\t\twindow.removeEventListener('resize', this.onWindowResize)\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = initialState\n\t}\n\n\trender () {\n\t\tif(this.props.measureBeforeMount && !this.mounted) {\n\t\t\treturn <div className={this.props.className} style={this.props.style} />\n\t\t}\n\n\t\treturn <ComposedComponent {...this.props} {...this.state} />\n\t}\n}\n\nexport default WidthProvider\n"]},"metadata":{},"sourceType":"module"}