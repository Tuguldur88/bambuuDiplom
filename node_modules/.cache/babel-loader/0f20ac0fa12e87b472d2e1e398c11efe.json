{"ast":null,"code":"var _jsxFileName = \"/home/tuguldur/MyDream/Diplom/notepad/src/_screens/classScreen.js\";\nimport React from 'react';\nimport './classCss.css';\nimport { Link } from 'react-router-dom';\nimport { rootConstants } from '../_constants';\nimport { connect } from 'react-redux';\nimport history from '../_store/history';\nimport schoolData from '../_data/schoolData';\nimport PlanPrint from '../_components/_lessonPlan/planPrint';\nimport { allActions } from '../_actions';\nimport GridLayout from 'react-grid-layout';\n\nclass classScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      isState: false,\n      isActive: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.lessonPlanRequest(\"hihah\");\n  }\n\n  handleClick(data, islog) {\n    if (islog) {\n      this.props.modalSchoolFalse(data);\n    } else {\n      this.props.newSchoolName(data);\n    }\n  }\n\n  render() {\n    const {\n      order,\n      lastPress,\n      currentColumn,\n      isPressed,\n      mouse,\n      isResizing\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, order.map((column, colIndex) => {\n      return column.map(row => {\n        let style,\n            x,\n            y,\n            visualPosition = order[colIndex].indexOf(row),\n            isActive = row === lastPress && colIndex === currentColumn && isPressed;\n\n        if (isActive) {\n          [x, y] = mouse;\n          style = {\n            translateX: x,\n            translateY: y,\n            scale: ReactMotion.spring(1.1, springSetting1)\n          };\n        } else if (isResizing) {\n          [x, y] = layout[colIndex][visualPosition];\n          style = {\n            translateX: x,\n            translateY: y,\n            scale: 1\n          };\n        } else {\n          [x, y] = layout[colIndex][visualPosition];\n          style = {\n            translateX: ReactMotion.spring(x, springSetting2),\n            translateY: ReactMotion.spring(y, springSetting2),\n            scale: ReactMotion.spring(1, springSetting1)\n          };\n        }\n\n        return React.createElement(ReactMotion.Motion, {\n          key: row,\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, ({\n          translateX,\n          translateY,\n          scale\n        }) => React.createElement(\"div\", {\n          onMouseDown: this.handleMouseDown.bind(null, row, colIndex, [x, y]),\n          onTouchStart: this.handleTouchStart.bind(null, row, colIndex, [x, y]),\n          className: isActive ? 'item is-active' : 'item',\n          style: {\n            WebkitTransform: `translate3d(${translateX}px, ${translateY}px, 0) scale(${scale})`,\n            transform: `translate3d(${translateX}px, ${translateY}px, 0) scale(${scale})`,\n            zIndex: row === lastPress && colIndex === currentColumn ? 99 : visualPosition\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Item \", row + 1));\n      });\n    }));\n  }\n\n}\n\nexport default connect(allActions.mapStateToProps, allActions.mapDispatchToProps)(classScreen);","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/notepad/src/_screens/classScreen.js"],"names":["React","Link","rootConstants","connect","history","schoolData","PlanPrint","allActions","GridLayout","classScreen","Component","constructor","props","handleClick","bind","state","isState","isActive","componentDidMount","lessonPlanRequest","data","islog","modalSchoolFalse","newSchoolName","render","order","lastPress","currentColumn","isPressed","mouse","isResizing","map","column","colIndex","row","style","x","y","visualPosition","indexOf","translateX","translateY","scale","ReactMotion","spring","springSetting1","layout","springSetting2","handleMouseDown","handleTouchStart","WebkitTransform","transform","zIndex","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAAUC,IAAV,QAAsB,kBAAtB;AACA,SAAQC,aAAR,QAA4B,eAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAQC,OAAR,MAAsB,mBAAtB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAGA,MAAMC,WAAN,SAA0BT,KAAK,CAACU,SAAhC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,KAAL,CAAWO,iBAAX,CAA6B,OAA7B;AAED;;AAGDN,EAAAA,WAAW,CAACO,IAAD,EAAOC,KAAP,EAAc;AACvB,QAAGA,KAAH,EAAS;AACP,WAAKT,KAAL,CAAWU,gBAAX,CAA4BF,IAA5B;AACD,KAFD,MAEK;AACH,WAAKR,KAAL,CAAWW,aAAX,CAAyBH,IAAzB;AACD;AAEF;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA,aAApB;AAAmCC,MAAAA,SAAnC;AAA8CC,MAAAA,KAA9C;AAAqDC,MAAAA;AAArD,QAAoE,KAAKf,KAA/E;AACA,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKU,KAAK,CAACM,GAAN,CAAW,CAACC,MAAD,EAASC,QAAT,KAAsB;AAC9B,aACID,MAAM,CAACD,GAAP,CAAaG,GAAD,IAAS;AACjB,YAAIC,KAAJ;AAAA,YACIC,CADJ;AAAA,YAEIC,CAFJ;AAAA,YAGIC,cAAc,GAAGb,KAAK,CAACQ,QAAD,CAAL,CAAgBM,OAAhB,CAAwBL,GAAxB,CAHrB;AAAA,YAIIjB,QAAQ,GAAIiB,GAAG,KAAKR,SAAR,IAAqBO,QAAQ,KAAKN,aAAlC,IAAmDC,SAJnE;;AAMA,YAAGX,QAAH,EAAa;AACT,WAACmB,CAAD,EAAIC,CAAJ,IAASR,KAAT;AACAM,UAAAA,KAAK,GAAG;AACJK,YAAAA,UAAU,EAAEJ,CADR;AAEJK,YAAAA,UAAU,EAAEJ,CAFR;AAGJK,YAAAA,KAAK,EAAEC,WAAW,CAACC,MAAZ,CAAmB,GAAnB,EAAwBC,cAAxB;AAHH,WAAR;AAKH,SAPD,MAOO,IAAGf,UAAH,EAAe;AAClB,WAACM,CAAD,EAAIC,CAAJ,IAASS,MAAM,CAACb,QAAD,CAAN,CAAiBK,cAAjB,CAAT;AACAH,UAAAA,KAAK,GAAG;AACJK,YAAAA,UAAU,EAAEJ,CADR;AAEJK,YAAAA,UAAU,EAAEJ,CAFR;AAGJK,YAAAA,KAAK,EAAE;AAHH,WAAR;AAKH,SAPM,MAOA;AACH,WAACN,CAAD,EAAIC,CAAJ,IAASS,MAAM,CAACb,QAAD,CAAN,CAAiBK,cAAjB,CAAT;AACAH,UAAAA,KAAK,GAAG;AACJK,YAAAA,UAAU,EAAEG,WAAW,CAACC,MAAZ,CAAmBR,CAAnB,EAAsBW,cAAtB,CADR;AAEJN,YAAAA,UAAU,EAAEE,WAAW,CAACC,MAAZ,CAAmBP,CAAnB,EAAsBU,cAAtB,CAFR;AAGJL,YAAAA,KAAK,EAAEC,WAAW,CAACC,MAAZ,CAAmB,CAAnB,EAAsBC,cAAtB;AAHH,WAAR;AAKH;;AAED,eACI,oBAAC,WAAD,CAAa,MAAb;AAAoB,UAAA,GAAG,EAAEX,GAAzB;AAA8B,UAAA,KAAK,EAAEC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,CAAC;AAACK,UAAAA,UAAD;AAAaC,UAAAA,UAAb;AAAyBC,UAAAA;AAAzB,SAAD,KACD;AACI,UAAA,WAAW,EAAE,KAAKM,eAAL,CAAqBlC,IAArB,CAA0B,IAA1B,EAAgCoB,GAAhC,EAAqCD,QAArC,EAA+C,CAACG,CAAD,EAAIC,CAAJ,CAA/C,CADjB;AAEI,UAAA,YAAY,EAAE,KAAKY,gBAAL,CAAsBnC,IAAtB,CAA2B,IAA3B,EAAiCoB,GAAjC,EAAsCD,QAAtC,EAAgD,CAACG,CAAD,EAAIC,CAAJ,CAAhD,CAFlB;AAGI,UAAA,SAAS,EAAEpB,QAAQ,GAAG,gBAAH,GAAsB,MAH7C;AAII,UAAA,KAAK,EAAE;AACHiC,YAAAA,eAAe,EAAG,eAAcV,UAAW,OAAMC,UAAW,gBAAeC,KAAM,GAD9E;AAEHS,YAAAA,SAAS,EAAG,eAAcX,UAAW,OAAMC,UAAW,gBAAeC,KAAM,GAFxE;AAGHU,YAAAA,MAAM,EAAGlB,GAAG,KAAKR,SAAR,IAAqBO,QAAQ,KAAKN,aAAnC,GAAoD,EAApD,GAAyDW;AAH9D,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQaJ,GAAG,GAAG,CARnB,CAFJ,CADJ;AAeH,OA7CD,CADJ;AAgDH,KAjDA,CADL,CADJ;AAsDH;;AAjFqC;;AAqF1C,eAAe/B,OAAO,CAACI,UAAU,CAAC8C,eAAZ,EAA4B9C,UAAU,CAAC+C,kBAAvC,CAAP,CAAkE7C,WAAlE,CAAf","sourcesContent":["import React from 'react';\nimport './classCss.css';\nimport {  Link } from 'react-router-dom';\nimport {rootConstants} from '../_constants';\nimport { connect } from 'react-redux';\nimport  history  from '../_store/history';\nimport schoolData from '../_data/schoolData';\nimport PlanPrint from '../_components/_lessonPlan/planPrint';\nimport {allActions} from '../_actions'\nimport GridLayout from 'react-grid-layout';\n\n\nclass classScreen extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.state = {\n          isState: false,\n          isActive: true\n        };\n      }\n      componentDidMount() {\n        this.props.lessonPlanRequest(\"hihah\");\n\n      }\n\n      \n      handleClick(data, islog) {\n        if(islog){\n          this.props.modalSchoolFalse(data)\n        }else{\n          this.props.newSchoolName(data)\n        }\n\n      }\n\n      render() {\n        const { order, lastPress, currentColumn, isPressed, mouse, isResizing } = this.state;\n        return (\n            <div className=\"items\">\n                {order.map( (column, colIndex) => {\n                    return (\n                        column.map( (row) => {\n                            let style,\n                                x,\n                                y,\n                                visualPosition = order[colIndex].indexOf(row),\n                                isActive = (row === lastPress && colIndex === currentColumn && isPressed);\n\n                            if(isActive) {\n                                [x, y] = mouse;\n                                style = {\n                                    translateX: x,\n                                    translateY: y,\n                                    scale: ReactMotion.spring(1.1, springSetting1)\n                                };\n                            } else if(isResizing) {\n                                [x, y] = layout[colIndex][visualPosition];\n                                style = {\n                                    translateX: x,\n                                    translateY: y,\n                                    scale: 1\n                                };\n                            } else {\n                                [x, y] = layout[colIndex][visualPosition];\n                                style = {\n                                    translateX: ReactMotion.spring(x, springSetting2),\n                                    translateY: ReactMotion.spring(y, springSetting2),\n                                    scale: ReactMotion.spring(1, springSetting1)\n                                };\n                            }\n\n                            return (\n                                <ReactMotion.Motion key={row} style={style}>\n                                    {({translateX, translateY, scale}) =>\n                                    <div\n                                        onMouseDown={this.handleMouseDown.bind(null, row, colIndex, [x, y])}\n                                        onTouchStart={this.handleTouchStart.bind(null, row, colIndex, [x, y])}\n                                        className={isActive ? 'item is-active' : 'item'}\n                                        style={{\n                                            WebkitTransform: `translate3d(${translateX}px, ${translateY}px, 0) scale(${scale})`,\n                                            transform: `translate3d(${translateX}px, ${translateY}px, 0) scale(${scale})`,\n                                            zIndex: (row === lastPress && colIndex === currentColumn) ? 99 : visualPosition,\n                                        }}>Item {row + 1}</div>\n                                    }\n                                </ReactMotion.Motion>\n                            )\n                        })\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\n\nexport default connect(allActions.mapStateToProps,allActions.mapDispatchToProps)(classScreen);\n\n"]},"metadata":{},"sourceType":"module"}