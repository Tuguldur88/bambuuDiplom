{"ast":null,"code":"var _jsxFileName = \"/home/tuguldur/MyDream/Diplom/notepad/src/_screens/classScreen.js\";\nimport React from 'react';\nimport './classCss.css';\nimport { Link } from 'react-router-dom';\nimport { rootConstants } from '../_constants';\nimport { connect } from 'react-redux';\nimport schoolData from '../_data/schoolData';\nimport homeScreen from './_screens/homeScreen';\n\nclass classScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      isState: false\n    };\n  }\n\n  handleClick(data, islog) {\n    if (islog) {\n      this.setState({\n        isState: true\n      });\n    } else {\n      this.props.newSchoolName(data);\n    }\n  }\n\n  render() {\n    if (this.state.isState) {\n      return React.createElement(\"homeScreen\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"divCss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Just clicked: \", this.props.counter, schoolData[this.props.schoolName].map((person, i) => React.createElement(\"button\", {\n        onClick: () => this.handleClick(person.id, person.parent),\n        className: \"schoolButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, person.NAME)));\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    lessonData: state.lessonData,\n    counter: state.counter,\n    islog: state.islog,\n    Reqislog: state.Reqislog,\n    graphLessonName: state.graphLessonName,\n    graphLessonData: state.graphLessonData,\n    schoolName: state.schoolName\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    newSchoolName: datas => dispatch({\n      type: rootConstants.SCHOOL_NAME,\n      data: datas\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(classScreen);","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/notepad/src/_screens/classScreen.js"],"names":["React","Link","rootConstants","connect","schoolData","homeScreen","classScreen","Component","constructor","props","handleClick","bind","state","isState","data","islog","setState","newSchoolName","render","counter","schoolName","map","person","i","id","parent","NAME","mapStateToProps","lessonData","Reqislog","graphLessonName","graphLessonData","mapDispatchToProps","dispatch","datas","type","SCHOOL_NAME"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAAUC,IAAV,QAAsB,kBAAtB;AACA,SAAQC,aAAR,QAA4B,eAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AACA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDH,EAAAA,WAAW,CAACI,IAAD,EAAOC,KAAP,EAAc;AAEvB,QAAGA,KAAH,EAAS;AACP,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAFD,MAEK;AACH,WAAKJ,KAAL,CAAWQ,aAAX,CAAyBH,IAAzB;AACD;AAEF;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKN,KAAL,CAAWC,OAAd,EAAsB;AACpB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJD,MAIK;AACL,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACiB,KAAKJ,KAAL,CAAWU,OAD5B,EAEGf,UAAU,CAAC,KAAKK,KAAL,CAAWW,UAAZ,CAAV,CAAkCC,GAAlC,CAAsC,CAACC,MAAD,EAASC,CAAT,KACrC;AACI,QAAA,OAAO,EAAE,MAAM,KAAKb,WAAL,CAAiBY,MAAM,CAACE,EAAxB,EAA4BF,MAAM,CAACG,MAAnC,CADnB;AAEI,QAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAE8BH,MAAM,CAACI,IAFrC,CADD,CAFH,CADF;AAWD;AACF;;AAtCqC;;AA8C1C,SAASC,eAAT,CAAyBf,KAAzB,EAAgC;AAC9B,SAAO;AACJgB,IAAAA,UAAU,EAAEhB,KAAK,CAACgB,UADd;AAEJT,IAAAA,OAAO,EAAEP,KAAK,CAACO,OAFX;AAGJJ,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAHT;AAIJc,IAAAA,QAAQ,EAAEjB,KAAK,CAACiB,QAJZ;AAKJC,IAAAA,eAAe,EAAElB,KAAK,CAACkB,eALnB;AAMJC,IAAAA,eAAe,EAAEnB,KAAK,CAACmB,eANnB;AAOJX,IAAAA,UAAU,EAAER,KAAK,CAACQ;AAPd,GAAP;AASD;;AACD,SAASY,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACHhB,IAAAA,aAAa,EAAGiB,KAAD,IAAWD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEjC,aAAa,CAACkC,WAArB;AAAmCtB,MAAAA,IAAI,EAACoB;AAAxC,KAAD;AAD/B,GAAP;AAGD;;AAED,eAAe/B,OAAO,CAACwB,eAAD,EAAiBK,kBAAjB,CAAP,CAA4C1B,WAA5C,CAAf","sourcesContent":["import React from 'react';\nimport './classCss.css';\nimport {  Link } from 'react-router-dom';\nimport {rootConstants} from '../_constants';\nimport { connect } from 'react-redux';\nimport schoolData from '../_data/schoolData';\nimport homeScreen from './_screens/homeScreen';\nclass classScreen extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.state = {\n          isState: false\n        };\n      }\n\n      handleClick(data, islog) {\n        \n        if(islog){\n          this.setState({isState: true})\n        }else{\n          this.props.newSchoolName(data)\n        }\n\n      }\n\n      render() {\n        if(this.state.isState){\n          return (\n            <homeScreen></homeScreen>\n          )\n        }else{\n        return (\n          <div className=\"divCss\">\n            Just clicked: {this.props.counter}\n            {schoolData[this.props.schoolName].map((person, i) => \n              <button \n                  onClick={() => this.handleClick(person.id, person.parent)}\n                  className=\"schoolButton\">{person.NAME}\n              </button>\n            )}\n          </div>\n        )\n      }\n    }\n}\n\n\n\n\n\n\nfunction mapStateToProps(state) {\n  return {\n     lessonData: state.lessonData,\n     counter: state.counter,\n     islog: state.islog,\n     Reqislog: state.Reqislog,\n     graphLessonName: state.graphLessonName,\n     graphLessonData: state.graphLessonData,\n     schoolName: state.schoolName,\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n      newSchoolName: (datas) => dispatch({type: rootConstants.SCHOOL_NAME , data:datas}),\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(classScreen);\n\n"]},"metadata":{},"sourceType":"module"}