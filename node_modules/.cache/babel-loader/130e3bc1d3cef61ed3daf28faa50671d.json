{"ast":null,"code":"var _jsxFileName = \"/home/tuguldur/MyDream/Diplom/notepad/src/_components/modalgraph.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { rootConstants } from '../_constants';\nimport DataPrint from './dataPrint';\nimport AmountChart from '../_components/amountChart';\nimport './componentcss.css';\n\nclass ModalGraph extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n      test: 1\n    };\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001/login', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: \"Asdasdas\"\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.token != null) {\n        let token = data.token.toString();\n        let userData = {\n          username: data.username,\n          token: token\n        };\n        this.props.login(userData);\n      } else {\n        alert(\"Нэвтрэх боломжгүй байна\");\n        this.props.navigation.navigate('Login');\n      }\n    }).catch(error => {\n      alert(\"Интернэт холболтоо шалгана\");\n    });\n  }\n\n  handleOpenModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  render() {\n    const datass = {\n      \"date\": \"2018\",\n      \"spring\": [{\n        label: \"A\",\n        y: 20\n      }, {\n        label: \"B\",\n        y: 8\n      }, {\n        label: \"C\",\n        y: 4\n      }, {\n        label: \"D\",\n        y: 5\n      }, {\n        label: \"F\",\n        y: 6\n      }, {\n        label: \"W\",\n        y: 2\n      }],\n      \"autumn\": [{\n        label: \"A\",\n        y: 1\n      }, {\n        label: \"B\",\n        y: 8\n      }, {\n        label: \"C\",\n        y: 2\n      }, {\n        label: \"D\",\n        y: 9\n      }, {\n        label: \"F\",\n        y: 3\n      }, {\n        label: \"W\",\n        y: 2\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(ReactModal, {\n      isOpen: this.props.islog,\n      contentLabel: \"\\u0414\\u04AF\\u043D\\u0433\\u0438\\u0439\\u043D \\u0433\\u0440\\u0430\\u0444\\u0438\\u043A\",\n      className: \"Modal\",\n      overlayClassName: \"Overlay\",\n      onRequestClose: () => this.props.modalFalse(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"\\u30E2\\u30FC\\u30C0\\u30EB\", [this.props.counter]), React.createElement(AmountChart, {\n      data: datass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.props.modalFalse(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Close Modal\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    lessonData: state.lessonData,\n    counter: state.counter,\n    islog: state.islog\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    modalTrue: () => dispatch({\n      type: rootConstants.MODAL_TRUE\n    }),\n    modalFalse: () => dispatch({\n      type: rootConstants.MODAL_FALSE\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalGraph);","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/notepad/src/_components/modalgraph.js"],"names":["React","ReactDOM","ReactModal","connect","rootConstants","DataPrint","AmountChart","ModalGraph","Component","constructor","state","showModal","test","handleOpenModal","bind","handleCloseModal","componentDidMount","fetch","method","headers","body","JSON","stringify","email","then","response","json","data","token","toString","userData","username","props","login","alert","navigation","navigate","catch","error","setState","render","datass","label","y","islog","modalFalse","counter","mapStateToProps","lessonData","mapDispatchToProps","dispatch","modalTrue","type","MODAL_TRUE","MODAL_FALSE"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport {rootConstants} from '../_constants';\nimport DataPrint from './dataPrint';\nimport AmountChart from '../_components/amountChart';\n\nimport './componentcss.css';\nclass ModalGraph extends React.Component {\n    constructor () {\n      super();\n      this.state = {\n        showModal: false,\n        test: 1\n      };\n      \n      this.handleOpenModal = this.handleOpenModal.bind(this);\n      this.handleCloseModal = this.handleCloseModal.bind(this);\n    }\n\n    componentDidMount() {\n      fetch('http://localhost:3001/login', {\n         method: 'POST',\n         headers: {\n           'Accept': 'application/json',\n           'Content-Type': 'application/json',\n         },\n         body: JSON.stringify({\n       \n           email: \"Asdasdas\",\n         })\n      }).then((response) => response.json())\n            .then((data) => {\n               if(data.token != null)\n               {  \n                  let token = data.token.toString();\n                  let userData = {username:data.username, token: token}\n                  this.props.login(userData)\n               }else{\n                  alert(\"Нэвтрэх боломжгүй байна\")\n                   this.props.navigation.navigate('Login');\n               }\n            }).catch((error) => {\n              alert(\"Интернэт холболтоо шалгана\")\n            });\n    }\n    \n    handleOpenModal () {\n      this.setState({ showModal: true });\n    }\n    \n    handleCloseModal () {\n      this.setState({ showModal: false });\n    }\n    \n    render () {\n      const datass ={ \n        \"date\": \"2018\",\n        \"spring\":[\n                    { label: \"A\", y: 20 },\n                    { label: \"B\", y: 8 },\n                    { label: \"C\", y: 4 },\n                    { label: \"D\", y: 5 },\n                    { label: \"F\", y: 6 },\n                    { label: \"W\", y: 2 }],\n        \"autumn\":[\n                    { label: \"A\", y: 1 },\n                    { label: \"B\", y: 8 },\n                    { label: \"C\", y: 2 },\n                    { label: \"D\", y: 9 },\n                    { label: \"F\", y: 3 },\n                    { label: \"W\", y: 2 },\n        ]\n      }\n      return (\n        <div>\n          <ReactModal \n             isOpen={this.props.islog}\n             contentLabel=\"Дүнгийн график\"\n             className=\"Modal\"\n             overlayClassName=\"Overlay\"\n             onRequestClose={ () => this.props.modalFalse()}\n             >\n            <div>モーダル{[this.props.counter]}</div>\n            <AmountChart data = {datass}></AmountChart>\n            <button onClick={ () => this.props.modalFalse()}>Close Modal</button>\n          </ReactModal>\n        </div>\n      );\n    }\n  }\n\n  function mapStateToProps(state) {\n    return {\n       lessonData: state.lessonData,\n       counter: state.counter,\n       islog: state.islog\n\n    }\n }\n function mapDispatchToProps(dispatch) {\n    return {\n        modalTrue: () => dispatch({type: rootConstants.MODAL_TRUE }),\n        modalFalse: () => dispatch({type: rootConstants.MODAL_FALSE }),\n    }\n }\n  export default connect(mapStateToProps,mapDispatchToProps)(ModalGraph);"]},"metadata":{},"sourceType":"module"}