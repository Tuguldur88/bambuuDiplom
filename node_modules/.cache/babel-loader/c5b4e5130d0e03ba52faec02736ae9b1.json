{"ast":null,"code":"import _objectSpread from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/src/components/excelPage.js\";\nimport React, { Component } from \"react\";\nimport { Table, Button, Popconfirm, Row, Col, Form, Upload } from \"antd\";\nimport { ExcelRenderer } from \"react-excel-renderer\";\nimport Allchart from '../allChart';\n\nvar ExcelPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExcelPage, _Component);\n\n  function ExcelPage(props) {\n    var _this;\n\n    _classCallCheck(this, ExcelPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExcelPage).call(this, props));\n\n    _this.handleSave = function (row) {\n      var newData = _toConsumableArray(_this.state.rows);\n\n      var index = newData.findIndex(function (item) {\n        return row.key === item.key;\n      });\n      var item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, row));\n\n      _this.setState({\n        rows: newData\n      });\n    };\n\n    _this.fileHandler = function (fileList) {\n      console.log(\"fileList\", fileList);\n      var fileObj = fileList;\n\n      if (!fileObj) {\n        _this.setState({\n          errorMessage: \"No file uploaded!\"\n        });\n\n        return false;\n      }\n\n      console.log(\"fileObj.type:\", fileObj.type);\n\n      if (!(fileObj.type === \"application/vnd.ms-excel\" || fileObj.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\")) {\n        _this.setState({\n          errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\n        });\n\n        return false;\n      } //just pass the fileObj as parameter\n\n\n      ExcelRenderer(fileObj, function (err, resp) {\n        if (err) {\n          console.log(err);\n        } else {\n          var newRows = [];\n          resp.rows.slice(1).map(function (row, index) {\n            if (row && row !== \"undefined\") {\n              newRows.push({\n                key: index,\n                id: row[0],\n                level: row[1],\n                gender: row[2],\n                q1: row[3],\n                q2: row[4],\n                q3: row[5],\n                q4: row[6]\n              });\n            }\n          });\n\n          if (newRows.length === 0) {\n            _this.setState({\n              errorMessage: \"No data found in file!\"\n            });\n\n            return false;\n          } else {\n            _this.setState({\n              cols: resp.cols,\n              rows: newRows,\n              errorMessage: null\n            });\n          }\n        }\n      });\n      return false;\n    };\n\n    _this.handleDelete = function (key) {\n      var rows = _toConsumableArray(_this.state.rows);\n\n      _this.setState({\n        rows: rows.filter(function (item) {\n          return item.key !== key;\n        })\n      });\n    };\n\n    _this.handleAdd = function () {\n      var _this$state = _this.state,\n          count = _this$state.count,\n          rows = _this$state.rows;\n      var newData = {\n        number: \"bambu\",\n        level: \"User's name\",\n        gender: \"22\",\n        question1: \"Female\",\n        question2: \"Female\",\n        question3: \"Female\",\n        question4: \"Female\",\n        yriltslga: \"Female\",\n        buleg: \"Female\"\n      };\n\n      _this.setState({\n        rows: [newData].concat(_toConsumableArray(rows)),\n        count: count + 1\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var value = event.target.value;\n      var name = event.target.name;\n      var formData = _this.state.formData;\n      formData[name] = value;\n\n      _this.setState({\n        formData: formData\n      });\n    };\n\n    _this.handleRequest = function () {\n      var rows = _this.state.rows;\n      var formData = _this.state.formData;\n      var datas = {\n        \"rows\": rows,\n        \"formData\": formData\n      };\n\n      _this.setState({\n        isLoading: true\n      });\n\n      fetch('http://127.0.0.1:5000/prediction/', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(datas)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        _this.setState({\n          result: response\n        });\n      });\n    };\n\n    _this.state = {\n      cols: [],\n      rows: [],\n      errorMessage: null,\n      result: [],\n      isLoading: false,\n      formData: {\n        coordinatX: \"q2\",\n        coordinatY: \"q3\",\n        covot: 3\n      },\n      columns: [{\n        title: \"Д/д\",\n        dataIndex: \"id\",\n        editable: true\n      }, {\n        title: \"Түвшин\",\n        dataIndex: \"level\",\n        editable: true\n      }, {\n        title: \"Хүйс\",\n        dataIndex: \"gender\",\n        editable: true\n      }, {\n        title: \"Онолын болон практик хичээлийн алийг нь судлахад тухайн сэдвээр ойлголт авахад илүү хялбар байдаг вэ?\",\n        dataIndex: \"q1\",\n        editable: true\n      }, {\n        title: \"Сурах үйл ажиллагаанд илүү их хүчин чармайлт гаргахад юу нөлөөлдөг вэ?\",\n        dataIndex: \"q2\",\n        editable: true\n      }, {\n        title: \"Хичээлийн үеэр ямар нөхцөлд буюу ямар үед хамгийн идэвхтэй суралцдаг вэ?\",\n        dataIndex: \"q3\",\n        editable: true\n      }, {\n        title: \"Долоо хоногт дунджаар хичээл хийхэд хэдэн цагийг зарцуулж байна? Үүнийг ихэсгэх / багасгах бодол байгаа юу?\",\n        dataIndex: \"q4\",\n        editable: true\n      }, {\n        title: \"Устгах\",\n        dataIndex: \"action\",\n        render: function render(text, record) {\n          return _this.state.rows.length >= 1 ? React.createElement(Popconfirm, {\n            title: \"Sure to delete?\",\n            onConfirm: function onConfirm() {\n              return _this.handleDelete(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, \"\\u0423\\u0441\\u0442\\u0433\\u0430\\u0445\")) : null;\n        }\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ExcelPage, [{\n    key: \"checkFile\",\n    value: function checkFile(file) {\n      var errorMessage = \"\";\n\n      if (!file || !file[0]) {\n        return;\n      }\n\n      var isExcel = file[0].type === \"application/vnd.ms-excel\" || file[0].type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n\n      if (!isExcel) {\n        errorMessage = \"You can only upload Excel file!\";\n      }\n\n      console.log(\"file\", file[0].type);\n      var isLt2M = file[0].size / 1024 / 1024 < 2;\n\n      if (!isLt2M) {\n        errorMessage = \"File must be smaller than 2MB!\";\n      }\n\n      console.log(\"errorMessage\", errorMessage);\n      return errorMessage;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formData = this.state.formData;\n      var result = this.state.result;\n      var isLoading = this.state.isLoading;\n      var covot = [];\n\n      for (var i = 1; i <= 4; i = +(i + 1).toFixed(1)) {\n        covot.push(React.createElement(\"option\", {\n          key: i,\n          value: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, i));\n      }\n\n      var seasonNamesX = [];\n      var inputRows = [\"level\", \"gender\", \"q1\", \"q2\", \"q3\", \"q4\"];\n\n      for (var i = 0; i < inputRows.length; i++) {\n        seasonNamesX.push(React.createElement(\"option\", {\n          key: inputRows[i],\n          value: inputRows[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, inputRows[i]));\n      }\n\n      var seasonNamesY = [];\n\n      for (var i = 0; i < inputRows.length; i++) {\n        seasonNamesY.push(React.createElement(\"option\", {\n          key: inputRows[i],\n          value: inputRows[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, inputRows[i]));\n      }\n\n      var columns = this.state.columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              editable: col.editable,\n              dataIndex: col.dataIndex,\n              title: col.title,\n              handleSave: _this2.handleSave\n            };\n          }\n        });\n      });\n      return React.createElement(React.Fragment, null, React.createElement(Row, {\n        gutter: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 8,\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: \"5%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"exampleFormControlSelect1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"X: \"), React.createElement(\"select\", {\n        class: \"form-control\",\n        id: \"exampleFormControlSelect1\",\n        as: \"select\",\n        value: formData.coordinatX,\n        name: \"coordinatX\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \" \", seasonNamesX)), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"exampleFormControlSelect1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Y:\"), React.createElement(\"select\", {\n        class: \"form-control\",\n        id: \"exampleFormControlSelect1\",\n        as: \"select\",\n        value: formData.coordinatY,\n        name: \"coordinatY\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \" \", seasonNamesY)), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"exampleFormControlSelect1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"\\u0425\\u044D\\u0434 \\u0445\\u0443\\u0432\\u0430\\u0430\\u0445 \\u0432\\u044D\"), React.createElement(\"select\", {\n        class: \"form-control\",\n        id: \"exampleFormControlSelect1\",\n        as: \"select\",\n        value: formData.covot,\n        name: \"covot\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \" \", covot)), React.createElement(Button, {\n        onClick: this.handleRequest,\n        size: \"large\",\n        type: \"info\",\n        style: {\n          marginBottom: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"urgejluuleh\")), React.createElement(Col, {\n        span: 8,\n        align: \"right\",\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, this.state.rows.length > 0 && React.createElement(React.Fragment, null, React.createElement(Button, {\n        onClick: this.handleAdd,\n        size: \"large\",\n        type: \"info\",\n        style: {\n          marginBottom: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Add a row\"), \" \"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        name: \"file\",\n        beforeUpload: this.fileHandler,\n        onRemove: function onRemove() {\n          return _this2.setState({\n            rows: []\n          });\n        },\n        multiple: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"\\u0422\\u0430 \\u0444\\u0430\\u0439\\u043B\\u0430\\u0430 \\u043E\\u0440\\u0443\\u0443\\u043B\\u043D\\u0430 \\u0443\\u0443\"))), isLoading ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Allchart, {\n        formData: formData,\n        data: result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      })) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \" \"), React.createElement(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(Table, {\n        rowClassName: function rowClassName() {\n          return \"editable-row\";\n        },\n        dataSource: this.state.rows,\n        columns: columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ExcelPage;\n}(Component);\n\nexport { ExcelPage as default };","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/src/components/excelPage.js"],"names":["React","Component","Table","Button","Popconfirm","Row","Col","Form","Upload","ExcelRenderer","Allchart","ExcelPage","props","handleSave","row","newData","state","rows","index","findIndex","item","key","splice","setState","fileHandler","fileList","console","log","fileObj","errorMessage","type","err","resp","newRows","slice","map","push","id","level","gender","q1","q2","q3","q4","length","cols","handleDelete","filter","handleAdd","count","number","question1","question2","question3","question4","yriltslga","buleg","handleChange","event","value","target","name","formData","handleRequest","datas","isLoading","fetch","headers","method","body","JSON","stringify","then","response","json","result","coordinatX","coordinatY","covot","columns","title","dataIndex","editable","render","text","record","file","isExcel","isLt2M","size","i","toFixed","seasonNamesX","inputRows","seasonNamesY","col","onCell","display","justifyContent","alignItems","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button, Popconfirm, Row, Col,Form, Upload } from \"antd\";\nimport { ExcelRenderer } from \"react-excel-renderer\";\nimport Allchart from '../allChart'\nexport default class ExcelPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cols: [],\n      rows: [],\n      errorMessage: null,\n      result:[],\n      isLoading:false,\n      formData: {\n        coordinatX: \"q2\",\n        coordinatY: \"q3\",\n        covot: 3,\n      },\n      columns: [\n        {\n          title: \"Д/д\",\n          dataIndex: \"id\",\n          editable: true\n        },\n        {\n          title: \"Түвшин\",\n          dataIndex: \"level\",\n          editable: true\n        },\n        {\n          title: \"Хүйс\",\n          dataIndex: \"gender\",\n          editable: true\n        },\n        {\n          title: \"Онолын болон практик хичээлийн алийг нь судлахад тухайн сэдвээр ойлголт авахад илүү хялбар байдаг вэ?\",\n          dataIndex: \"q1\",\n          editable: true\n        },\n        {\n          title: \"Сурах үйл ажиллагаанд илүү их хүчин чармайлт гаргахад юу нөлөөлдөг вэ?\",\n          dataIndex: \"q2\",\n          editable: true\n        },\n        {\n          title: \"Хичээлийн үеэр ямар нөхцөлд буюу ямар үед хамгийн идэвхтэй суралцдаг вэ?\",\n          dataIndex: \"q3\",\n          editable: true\n        },\n        {\n          title: \"Долоо хоногт дунджаар хичээл хийхэд хэдэн цагийг зарцуулж байна? Үүнийг ихэсгэх / багасгах бодол байгаа юу?\",\n          dataIndex: \"q4\",\n          editable: true\n        },\n        {\n          title: \"Устгах\",\n          dataIndex: \"action\",\n          render: (text, record) =>\n            this.state.rows.length >= 1 ? (\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => this.handleDelete(record.key)}\n              >\n                <p>Устгах</p>\n              </Popconfirm>\n            ) : null\n        }\n      ]\n    };\n  }\n\n  handleSave = row => {\n    const newData = [...this.state.rows];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row\n    });\n    this.setState({ rows: newData });\n  };\n\n  checkFile(file) {\n    let errorMessage = \"\";\n    if (!file || !file[0]) {\n      return;\n    }\n    const isExcel =\n      file[0].type === \"application/vnd.ms-excel\" ||\n      file[0].type ===\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    if (!isExcel) {\n      errorMessage = \"You can only upload Excel file!\";\n    }\n    console.log(\"file\", file[0].type);\n    const isLt2M = file[0].size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      errorMessage = \"File must be smaller than 2MB!\";\n    }\n    console.log(\"errorMessage\", errorMessage);\n    return errorMessage;\n  }\n\n  fileHandler = fileList => {\n    console.log(\"fileList\", fileList);\n    let fileObj = fileList;\n    if (!fileObj) {\n      this.setState({\n        errorMessage: \"No file uploaded!\"\n      });\n      return false;\n    }\n    console.log(\"fileObj.type:\", fileObj.type);\n    if (\n      !(\n        fileObj.type === \"application/vnd.ms-excel\" ||\n        fileObj.type ===\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      )\n    ) {\n      this.setState({\n        errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\n      });\n      return false;\n    }\n    //just pass the fileObj as parameter\n    ExcelRenderer(fileObj, (err, resp) => {\n      if (err) {\n        console.log(err);\n      } else {\n        let newRows = [];\n        resp.rows.slice(1).map((row, index) => {\n          if (row && row !== \"undefined\") {\n            newRows.push({\n              key: index,\n              id: row[0],\n              level: row[1],\n              gender: row[2],\n              q1: row[3],\n              q2: row[4],\n              q3: row[5],\n              q4: row[6],\n\n            });\n          }\n        });\n        if (newRows.length === 0) {\n          this.setState({\n            errorMessage: \"No data found in file!\"\n          });\n          return false;\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: newRows,\n            errorMessage: null\n          });\n        }\n      }\n    });\n    return false;\n  };\n\n\n  handleDelete = key => {\n    const rows = [...this.state.rows];\n    this.setState({ rows: rows.filter(item => item.key !== key) });\n  };\n  handleAdd = () => {\n    const { count, rows } = this.state;\n    const newData = {\n      number: \"bambu\",\n      level: \"User's name\",\n      gender: \"22\",\n      question1: \"Female\",\n      question2: \"Female\",\n      question3: \"Female\",\n      question4: \"Female\",\n      yriltslga: \"Female\",\n      buleg: \"Female\",\n    };\n    this.setState({\n      rows: [newData, ...rows],\n      count: count + 1\n    });\n  };\n  handleChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    var formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  }\n  handleRequest = () => {\n    const rows = this.state.rows;\n    const formData = this.state.formData;\n    const datas = {\"rows\":rows, \"formData\":formData}\n    this.setState({ isLoading: true });\n    fetch('http://127.0.0.1:5000/prediction/', \n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(datas)\n      })\n      .then(response => response.json())\n      .then(response => {\n        this.setState({\n          result: response,\n        });\n      });\n  };\n  render() {\n    const formData = this.state.formData;\n    const result = this.state.result;\n    const isLoading = this.state.isLoading;\n\n    var covot = []\n    for (var i = 1; i <= 4; i = +(i + 1).toFixed(1)) {\n      covot.push(<option key = {i} value = {i}>{i}</option>);\n    }\n    var seasonNamesX = []\n    var inputRows = [\"level\",\"gender\",\"q1\",\"q2\",\"q3\",\"q4\"]\n    for (var i = 0; i < inputRows.length; i++)\n    {\n      seasonNamesX.push(<option key = {inputRows[i]} value = {inputRows[i]}>{inputRows[i]}</option>);\n    }\n    var seasonNamesY = []\n    for (var i = 0; i < inputRows.length; i++)\n    {\n      seasonNamesY.push(<option key = {inputRows[i]} value = {inputRows[i]}>{inputRows[i]}</option>);\n    }\n\n\n\n    const columns = this.state.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return (\n      <>\n        <Row gutter={16}>\n          <Col\n            span={8}\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginBottom: \"5%\"\n            }}\n          >\n          </Col>\n          <Col span={2}>\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlSelect1\">X: </label>\n            <select class=\"form-control\" id=\"exampleFormControlSelect1\"as=\"select\" value={formData.coordinatX} name=\"coordinatX\" onChange={this.handleChange}> {seasonNamesX}</select>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlSelect1\">Y:</label>\n            <select class=\"form-control\" id=\"exampleFormControlSelect1\"as=\"select\" value={formData.coordinatY} name=\"coordinatY\" onChange={this.handleChange}> {seasonNamesY}</select>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlSelect1\">Хэд хуваах вэ</label>\n            <select class=\"form-control\" id=\"exampleFormControlSelect1\"as=\"select\" value={formData.covot} name=\"covot\" onChange={this.handleChange}> {covot}</select>\n          </div>\n            <Button onClick={this.handleRequest} size=\"large\" type=\"info\" style={{ marginBottom: 16 }} >urgejluuleh</Button>\n\n          </Col>\n          <Col\n            span={8}\n            align=\"right\"\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            {this.state.rows.length > 0 && (\n              <>\n                <Button\n                  onClick={this.handleAdd}\n                  size=\"large\"\n                  type=\"info\"\n                  style={{ marginBottom: 16 }}\n                >\n                  \n                  Add a row\n                </Button>{\" \"}\n              </>\n            )}\n          </Col>\n        </Row>\n        <div>\n          <Upload\n            name=\"file\"\n            beforeUpload={this.fileHandler}\n            onRemove={() => this.setState({ rows: [] })}\n            multiple={false}\n          >\n            <Button>\n               Та файлаа оруулна уу\n            </Button>\n          </Upload>\n        </div>\n        {isLoading ? \n        <div><Allchart formData={formData} data={result}></Allchart></div>:<p> </p> }\n        <div style={{ marginTop: 20 }}>\n          <Table\n            rowClassName={() => \"editable-row\"}\n            dataSource={this.state.rows}\n            columns={columns}\n          />\n        </div>\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}