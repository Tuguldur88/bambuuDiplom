{"ast":null,"code":"var _jsxFileName = \"/home/tuguldur/MyDream/Diplom/notepad/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store1 from './_store/store';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './App';\nimport HomeScreen from './_screens/homeScreen';\nimport * as serviceWorker from './serviceWorker';\nconst initialState = {\n  counter: 1\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INCREASE_COUNTER':\n      return {\n        counter: state.counter + 1\n      };\n\n    case 'DECREASE_COUNTER':\n      return {\n        counter: state.counter - 1\n      };\n  }\n\n  return state;\n};\n\nconst store = createStore(reducer);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \" \", React.createElement(HomeScreen, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), \" \"), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/notepad/src/index.js"],"names":["React","ReactDOM","Provider","store1","createStore","App","HomeScreen","serviceWorker","initialState","counter","reducer","state","action","type","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,aAAO;AAAEJ,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAA3B,OAAP;;AACJ,SAAK,kBAAL;AACI,aAAO;AAAEA,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAA3B,OAAP;AAJR;;AAMA,SAAOE,KAAP;AACH,CARD;;AASA,MAAMG,KAAK,GAAGV,WAAW,CAACM,OAAD,CAAzB;AAEAT,QAAQ,CAACc,MAAT,CAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAyB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAzB,MAAhB,EAAoEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApE,E,CAEA;AACA;AACA;;AACAV,aAAa,CAACW,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store1 from './_store/store';\nimport { createStore } from 'redux'\nimport './index.css';\nimport App from './App';\nimport HomeScreen from './_screens/homeScreen';\nimport * as serviceWorker from './serviceWorker';\n\nconst initialState = {\n    counter: 1\n}\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'INCREASE_COUNTER':\n            return { counter: state.counter + 1 }\n        case 'DECREASE_COUNTER':\n            return { counter: state.counter - 1 }\n    }\n    return state\n}\nconst store = createStore(reducer)\n\nReactDOM.render(<Provider store={store}> <HomeScreen/> </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}