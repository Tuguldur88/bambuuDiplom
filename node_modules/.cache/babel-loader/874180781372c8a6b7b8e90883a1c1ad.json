{"ast":null,"code":"import _objectSpread from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/src/utils/editable.js\";\nimport React from 'react';\nimport { Form, Input } from 'antd';\nvar EditableContext = React.createContext();\n\nvar EditableRow = function EditableRow(_ref) {\n  var form = _ref.form,\n      index = _ref.index,\n      props = _objectWithoutProperties(_ref, [\"form\", \"index\"]);\n\n  return React.createElement(EditableContext.Provider, {\n    value: form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"tr\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  })));\n};\n\nexport var EditableFormRow = Form.create()(EditableRow);\nexport var EditableCell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditableCell, _React$Component);\n\n  function EditableCell() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditableCell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditableCell)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editing: false\n    };\n\n    _this.toggleEdit = function () {\n      var editing = !_this.state.editing;\n\n      _this.setState({\n        editing: editing\n      }, function () {\n        if (editing) {\n          _this.input.focus();\n        }\n      });\n    };\n\n    _this.save = function (e) {\n      var _this$props = _this.props,\n          record = _this$props.record,\n          handleSave = _this$props.handleSave;\n\n      _this.form.validateFields(function (error, values) {\n        if (error && error[e.currentTarget.id]) {\n          return;\n        }\n\n        _this.toggleEdit();\n\n        handleSave(_objectSpread({}, record, values));\n      });\n    };\n\n    _this.renderCell = function (form) {\n      _this.form = form;\n      var _this$props2 = _this.props,\n          children = _this$props2.children,\n          dataIndex = _this$props2.dataIndex,\n          record = _this$props2.record,\n          title = _this$props2.title;\n      var editing = _this.state.editing;\n      return editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, form.getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"\".concat(title, \" is required.\")\n        }],\n        initialValue: record[dataIndex]\n      })(React.createElement(Input, {\n        ref: function ref(node) {\n          return _this.input = node;\n        },\n        onPressEnter: _this.save,\n        onBlur: _this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"editable-cell-value-wrap\",\n        style: {\n          paddingRight: 24,\n          minHeight: 32\n        },\n        onClick: _this.toggleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, children);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditableCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          editable = _this$props3.editable,\n          dataIndex = _this$props3.dataIndex,\n          title = _this$props3.title,\n          record = _this$props3.record,\n          index = _this$props3.index,\n          handleSave = _this$props3.handleSave,\n          children = _this$props3.children,\n          restProps = _objectWithoutProperties(_this$props3, [\"editable\", \"dataIndex\", \"title\", \"record\", \"index\", \"handleSave\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), editable ? React.createElement(EditableContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.renderCell) : children);\n    }\n  }]);\n\n  return EditableCell;\n}(React.Component);","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/ml_react/ML-React-App-Template/ui/src/utils/editable.js"],"names":["React","Form","Input","EditableContext","createContext","EditableRow","form","index","props","EditableFormRow","create","EditableCell","state","editing","toggleEdit","setState","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","id","renderCell","children","dataIndex","title","margin","getFieldDecorator","rules","required","message","initialValue","node","paddingRight","minHeight","editable","restProps","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Form, Input} from 'antd'\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nexport const EditableFormRow = Form.create()(EditableRow);\n\nexport class EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24, minHeight: 32 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}