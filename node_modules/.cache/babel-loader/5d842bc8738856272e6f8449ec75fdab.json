{"ast":null,"code":"import { rootConstants } from '../_constants';\nexport const allActions = {\n  mapStateToProps,\n  mapDispatchToProps\n};\n\nfunction mapStateToProps(state) {\n  return {\n    lessonData: state.lessonData,\n    lessonData1: state.lessonData1,\n    counter: state.counter,\n    GrapIsLog: state.GrapIsLog,\n    GrapRequestIsLog: state.GrapRequestIsLog,\n    LessonIsLog: state.LessonIsLog,\n    SchoolIsLog: state.SchoolIsLog,\n    LessonChooseRequest: state.LessonChooseRequest,\n    LessonChooseIsLog: state.LessonChooseIsLog,\n    LessonChooseData: state.LessonChooseData,\n    graphLessonName: state.graphLessonName,\n    graphLessonData: state.graphLessonData,\n    schoolName: state.schoolName,\n    buttonStateName: state.buttonStateName,\n    allLessonData: state.allLessonData,\n    example: state.example,\n    lessonPlan: state.lessonPlan,\n    planRequest: state.planRequest,\n    planIslog: state.planIslog\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    newSchoolName: datas => dispatch({\n      type: rootConstants.SCHOOL_NAME,\n      data: datas\n    }),\n    newLesson: data1 => dispatch({\n      type: rootConstants.ROOT_REQUEST,\n      data: data1\n    }),\n    chartState: data1 => dispatch({\n      type: rootConstants.MODAL_REQUEST,\n      data: data1\n    }),\n    modalTrue: () => dispatch({\n      type: rootConstants.MODAL_GRAP_TRUE\n    }),\n    modalFalse: () => dispatch({\n      type: rootConstants.MODAL_GRAP_FALSE\n    }),\n    modalRequest: data => dispatch({\n      type: rootConstants.MODAL_GRAP_REQUEST,\n      data: data\n    }),\n    LessonChooseTrue: () => dispatch({\n      type: rootConstants.LESSON_CHOOSE_TRUE\n    }),\n    LessonChooseFalse: () => dispatch({\n      type: rootConstants.LESSON_CHOOSE_FALSE\n    }),\n    LessonChooseRequest: (data, name) => dispatch({\n      type: rootConstants.LESSON_CHOOSE_REQUEST,\n      data: data,\n      name: name\n    }),\n    modalLessonTrue: () => dispatch({\n      type: rootConstants.MODAL_LESSON_TRUE\n    }),\n    modalLessonFalse: (data, data1) => dispatch({\n      type: rootConstants.MODAL_LESSON_FALSE,\n      data: data,\n      data1: data1\n    }),\n    modalSchoolTrue: data => dispatch({\n      type: rootConstants.MODAL_SCHOOL_TRUE,\n      data: data\n    }),\n    modalSchoolFalse: () => dispatch({\n      type: rootConstants.MODAL_SCHOOL_FALSE\n    }),\n    lessonDataPush: data1 => dispatch({\n      type: rootConstants.LESSONS_DATA_PUSH,\n      data: data1\n    }),\n    lessonDataPop: data1 => dispatch({\n      type: rootConstants.LESSONS_DATA_POP,\n      data: data1\n    }),\n    buttonStateControl: data1 => dispatch({\n      type: rootConstants.BUTTON_STATE,\n      data: data1\n    }),\n    // Hicheel huvair gargah uyiin tovchnuuud\n    lessonPlanRequest: data => dispatch({\n      type: rootConstants.LESSON_PLAN_REQUEST,\n      data: data\n    })\n  };\n}","map":{"version":3,"sources":["/home/tuguldur/MyDream/Diplom/notepad/src/_actions/actions.js"],"names":["rootConstants","allActions","mapStateToProps","mapDispatchToProps","state","lessonData","lessonData1","counter","GrapIsLog","GrapRequestIsLog","LessonIsLog","SchoolIsLog","LessonChooseRequest","LessonChooseIsLog","LessonChooseData","graphLessonName","graphLessonData","schoolName","buttonStateName","allLessonData","example","lessonPlan","planRequest","planIslog","dispatch","newSchoolName","datas","type","SCHOOL_NAME","data","newLesson","data1","ROOT_REQUEST","chartState","MODAL_REQUEST","modalTrue","MODAL_GRAP_TRUE","modalFalse","MODAL_GRAP_FALSE","modalRequest","MODAL_GRAP_REQUEST","LessonChooseTrue","LESSON_CHOOSE_TRUE","LessonChooseFalse","LESSON_CHOOSE_FALSE","name","LESSON_CHOOSE_REQUEST","modalLessonTrue","MODAL_LESSON_TRUE","modalLessonFalse","MODAL_LESSON_FALSE","modalSchoolTrue","MODAL_SCHOOL_TRUE","modalSchoolFalse","MODAL_SCHOOL_FALSE","lessonDataPush","LESSONS_DATA_PUSH","lessonDataPop","LESSONS_DATA_POP","buttonStateControl","BUTTON_STATE","lessonPlanRequest","LESSON_PLAN_REQUEST"],"mappings":"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","sourcesContent":["import {rootConstants} from '../_constants';\n\nexport const allActions = {\n    mapStateToProps,\n    mapDispatchToProps\n};\n\nfunction mapStateToProps(state) {\n    return {\n       lessonData: state.lessonData,\n       lessonData1: state.lessonData1,\n       counter: state.counter,\n\n       GrapIsLog: state.GrapIsLog,\n       GrapRequestIsLog: state.GrapRequestIsLog,\n       LessonIsLog: state.LessonIsLog,\n       SchoolIsLog: state.SchoolIsLog,\n\n\n       LessonChooseRequest: state.LessonChooseRequest,\n       LessonChooseIsLog: state.LessonChooseIsLog,\n       LessonChooseData: state.LessonChooseData,\n\n\n       graphLessonName: state.graphLessonName,\n       graphLessonData: state.graphLessonData,\n       schoolName: state.schoolName,\n       buttonStateName: state.buttonStateName,\n       allLessonData: state.allLessonData,\n       example: state.example,\n\n\n       lessonPlan: state.lessonPlan,\n       planRequest: state.planRequest,\n       planIslog: state.planIslog,\n    }\n  }\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        newSchoolName: (datas) => dispatch({type: rootConstants.SCHOOL_NAME , data:datas}),\n        newLesson: (data1) => dispatch({type: rootConstants.ROOT_REQUEST , data: data1}),\n\n        chartState: (data1) => dispatch({type: rootConstants.MODAL_REQUEST , data: data1}),\n        \n        modalTrue: () => dispatch({type: rootConstants.MODAL_GRAP_TRUE }),\n        modalFalse: () => dispatch({type: rootConstants.MODAL_GRAP_FALSE }),\n        modalRequest: (data) => dispatch({type: rootConstants.MODAL_GRAP_REQUEST, data:data }),\n\n        LessonChooseTrue: () => dispatch({type: rootConstants.LESSON_CHOOSE_TRUE }),\n        LessonChooseFalse: () => dispatch({type: rootConstants.LESSON_CHOOSE_FALSE }),\n        LessonChooseRequest: (data, name) => dispatch({type: rootConstants.LESSON_CHOOSE_REQUEST, data:data , name: name}),\n\n        modalLessonTrue: () => dispatch({type: rootConstants.MODAL_LESSON_TRUE }),\n        modalLessonFalse: (data,data1) => dispatch({type: rootConstants.MODAL_LESSON_FALSE , data:data, data1:data1}),\n\n        modalSchoolTrue: (data) => dispatch({type: rootConstants.MODAL_SCHOOL_TRUE ,data:data}),\n        modalSchoolFalse: () => dispatch({type: rootConstants.MODAL_SCHOOL_FALSE }),\n\n\n\n        lessonDataPush: (data1) => dispatch({type: rootConstants.LESSONS_DATA_PUSH , data: data1}),\n        lessonDataPop: (data1) => dispatch({type: rootConstants.LESSONS_DATA_POP , data: data1}),\n\n        buttonStateControl: (data1) => dispatch({type: rootConstants.BUTTON_STATE , data: data1}),\n\n// Hicheel huvair gargah uyiin tovchnuuud\n        lessonPlanRequest: (data) => dispatch({type: rootConstants.LESSON_PLAN_REQUEST , data:data}),\n\n    }\n}"]},"metadata":{},"sourceType":"module"}